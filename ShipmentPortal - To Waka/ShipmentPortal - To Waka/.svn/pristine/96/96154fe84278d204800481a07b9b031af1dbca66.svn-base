<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csfe.edison.business.dao.EdisonDAO">

	<sql id="dbName">edison_prc_cvs.dbo.edisonetlid</sql>
	<sql id="azureDB">[AZURE New Staging DB].[SP-GlobalIdSchemaDB]</sql>
	<sql id="azureMasterDB">[azure sql masterdb].[masterdata-testdb]</sql>
	<sql id="cvsDB">edison_prc_cvs</sql>
	<sql id="containerStatusLog">CSHKG_SHIPMENT_EVENT.dbo.ContainerStatusLog</sql>
	<sql id="containerStatusEventLog">CSHKG_SHIPMENT_EVENT.dbo.ContainerStatusEventLog</sql>
	<sql id="polist"><foreach item="item" index="index" collection="pocompanyCode" open="(" separator="," close=")">#{item}</foreach></sql>
	<sql id="list"><foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach></sql>
	<!-- Retrieve data for 1 or 2 days - configurable for SP2-14 - SP2-20 -->
	<sql id="lastUpdatedDay">DATEADD(DD, DATEDIFF(DD, 0, #{sysdate}), -2)</sql>
	<sql id="companyCodelist"><foreach item="item" index="index" collection="companyCode" open="(" separator="," close=")">#{item}</foreach></sql>
	<sql id="PRINCIPAL_CODE">'THHO02'</sql>
	<sql id="CONSIGNEE_CODE">'THHO02'</sql>

	<select id="findOrganizations" resultType="Organizations">
		SELECT 
		       ii.id AS [id],
		       'FreightSystem' AS createdby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		       'FreightSystem' AS updatedby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		       CASE WHEN ISNULL(ii.code2,'') = 'CENTRALIZED' THEN RTRIM(cch.companycode) ELSE RTRIM(ISNULL(map.OurCode,'')) + '|' + RTRIM(cch.companycode) END AS code,
		       RTRIM(ISNULL(cch.companyname, '')) AS name,
		       RTRIM(ISNULL(ccd.email, '')) AS contactemail,
		       RTRIM(ISNULL(ccd.contact, '')) AS contactname,
		       RTRIM(ccd.telno) AS contactnumber,
		       ISNULL(CONVERT(NVARCHAR(500), RTRIM(ISNULL(ccd.address1,'')) + '\n' + RTRIM(ISNULL(ccd.address2,'')) + '\n' + RTRIM(ISNULL(ccd.address3,'')) + '\n' + RTRIM(ISNULL(ccd.address4,''))), '') AS [address],
		       0 AS edisoninstanceid,
		       ii.azureid AS edisoncompanycodeid,
		       8 AS locationid,
		       2 AS organizationtype,
		       '' AS parentid,
		       1 AS [status]
		FROM <include refid="dbName"/> ii (NOLOCK) 
		INNER JOIN dbo.companyheader cch (NOLOCK)
			ON ii.codetype = 'ORGANIZATIONS'
			AND ii.sysname = 'MASTERDATA'
			AND ii.dbname = #{db}
			AND ii.code = cch.companycode
		INNER JOIN dbo.companydetail ccd (NOLOCK) 
			ON cch.companycode = ccd.companycode
			AND ccd.seq = 1
			--AND RTRIM(ISNULL(ccd.email, '')) <![CDATA[ <> ]]> ''
			--AND RTRIM(ISNULL(ccd.contact, '')) <![CDATA[ <> ]]> ''
			--AND ISNULL(CONVERT(NVARCHAR(500), RTRIM(ISNULL(ccd.address1,'')) + '\n' + RTRIM(ISNULL(ccd.address2,'')) + '\n' + RTRIM(ISNULL(ccd.address3,'')) + '\n' + RTRIM(ISNULL(ccd.address4,''))), '') <![CDATA[ <> ]]> ''
		LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap map (nolock)
			ON map.EDIName = 'SHIPMENT_PORTAL'
			AND map.codetype = 'CMPYPREFIX'
			AND map.Status = 'Y'
			AND map.PartnerCode = #{db}
		LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap popmap (nolock)
			ON popmap.EDIName = 'SHIPMENT_PORTAL'
			AND popmap.codetype = 'POPARTYPREFIX'
			AND popmap.Status = 'Y'
			AND popmap.PartnerCode = #{db}
		WHERE ISNULL(popmap.Status, '') <![CDATA[ <> ]]> 'Y'
		AND NOT EXISTS (
			SELECT 1 FROM <include refid="dbName"/> olog (NOLOCK)
				WHERE olog.codetype = 'ORGANIZATIONS'
				AND ii.sysname = 'MASTERDATA'
				AND olog.IsETLtoAzure = 'Y'
				AND ii.code = olog.code
				AND ISNULL(olog.code2,'') = 'CENTRALIZED'
				AND ISNULL(ii.code2,'') = 'CENTRALIZED'
				AND ISNULL(ii.IsETLtoAzure,'') <![CDATA[ <> ]]> 'Y'
				AND ii.id <![CDATA[ <> ]]> olog.id
		)
		AND ii.id in <include refid="list"/>
		UNION ALL
		SELECT 
		       ii.id AS [id],
		       'FreightSystem' AS createdby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		       'FreightSystem' AS updatedby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		       ii.code AS code,
		       ii.code3 AS name,
		       NULL AS contactemail,
		       NULL AS contactname,
		       NULL AS contactnumber,
		       NULL AS [address],
		       0 AS edisoninstanceid,
		       dd.Id AS edisoncompanycodeid,
		       8 AS locationid,
		       4 AS organizationtype,
		       '' AS parentid,
		       1 AS [status]
		FROM <include refid="dbName"/> AS ii(NOLOCK)
		LEFT JOIN <include refid="dbName"/> AS dd(NOLOCK) ON ii.code2 = dd.code
		                                        AND dd.codetype = 'ORGANIZATIONS'
		                                        AND ii.sysname = dd.sysname
		                                        AND ii.dbname = dd.dbname
		LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap popmap (nolock)
			ON popmap.EDIName = 'SHIPMENT_PORTAL'
			AND popmap.codetype = 'POPARTYPREFIX'
			AND popmap.Status = 'Y'
			AND popmap.PartnerCode = #{db}
		WHERE ISNULL(popmap.Status, '') <![CDATA[ <> ]]> 'Y'
		AND NOT EXISTS (
			SELECT 1 FROM <include refid="dbName"/> olog (NOLOCK)
				WHERE olog.codetype = 'PRINCIPALS'
				AND olog.sysname = 'MASTERDATA'
				AND olog.IsETLtoAzure = 'Y'
				AND ii.code = olog.code
				AND ISNULL(ii.IsETLtoAzure,'') <![CDATA[ <> ]]> 'Y'
				AND ii.id <![CDATA[ <> ]]> olog.id
		)
		AND ii.codetype = 'PRINCIPALS'
		AND olog.sysname = 'MASTERDATA'
		AND ii.dbname = #{db}
		AND ii.id in <include refid="list"/>
		UNION ALL
		--PO Parties
		SELECT DISTINCT
		       ii.id AS [id],
		       'FreightSystem' AS createdby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		       'FreightSystem' AS updatedby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		       RTRIM(ISNULL(pop.PartyCode, '')) AS code,
		       RTRIM(ISNULL(pop.PartyName, '')) AS name,
		       RTRIM(ISNULL(pop.Email, '')) AS contactemail,
		       RTRIM(ISNULL(pop.ContactPerson, '')) AS contactname,
		       RTRIM(ISNULL(pop.TelNo, '')) AS contactnumber,
		       ISNULL(CONVERT(NVARCHAR(500), RTRIM(ISNULL(pop.AddressLine1,'')) + '\n' + RTRIM(ISNULL(pop.AddressLine2,'')) + '\n' + RTRIM(ISNULL(pop.AddressLine3,'')) + '\n' + RTRIM(ISNULL(pop.AddressLine4,''))), '') AS [address],
		       0 AS edisoninstanceid,
		       ii.azureid AS edisoncompanycodeid,
		       8 AS locationid,
		       2 AS organizationtype,
		       '' AS parentid,
		       1 AS [status]
		FROM <include refid="dbName"/> ii (NOLOCK) 
		INNER JOIN <include refid="cvsDB"/>.dbo.POParty pop (NOLOCK)
			ON ii.codetype = 'ORGANIZATIONS'
			AND olog.sysname = 'MASTERDATA'
			AND ii.dbname = #{db}
			AND ii.seq = 1
			AND pop.CompanyCode = ii.code3
			AND pop.CompanyType = ii.code2
			AND pop.PartyCode = ii.code
			AND pop.PartyType IN ('V','S','P')
		LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap popmap (nolock)
			ON popmap.EDIName = 'SHIPMENT_PORTAL'
			AND popmap.codetype = 'POPARTYPREFIX'
			AND popmap.Status = 'Y'
			AND popmap.PartnerCode = #{db}
		WHERE ISNULL(popmap.Status, '') = 'Y'
		AND ii.id in <include refid="list"/>
		UNION ALL
		--PO supplier
		SELECT DISTINCT
		       ii.id AS [id],
		       'FreightSystem' AS createdby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		       'FreightSystem' AS updatedby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		       RTRIM(ISNULL(cvpo.SupplierCode, '')) AS code,
		       RTRIM(ISNULL(cvpo.SupplierName, '')) AS name,
		       NULL AS contactemail,
		       NULL AS contactname,
		       NULL AS contactnumber,
		       NULL AS [address],
			   0 AS edisoninstanceid,
		       ii.azureid AS edisoncompanycodeid,
		       8 AS locationid,
		       2 AS organizationtype,
		       '' AS parentid,
		       1 AS [status]
		FROM <include refid="dbName"/> ii (NOLOCK) 
		INNER JOIN <include refid="cvsDB"/>.dbo.CompanyValidPO cvpo (NOLOCK)
			ON ii.codetype = 'ORGANIZATIONS'
			AND olog.sysname = 'MASTERDATA'
			AND ii.dbname = #{db}
			AND ii.seq = 2
			AND cvpo.SupplierCode = ii.code
		LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap popmap (nolock)
			ON popmap.EDIName = 'SHIPMENT_PORTAL'
			AND popmap.codetype = 'POPARTYPREFIX'
			AND popmap.Status = 'Y'
			AND popmap.PartnerCode = #{db}
		WHERE ISNULL(popmap.Status, '') = 'Y'
		AND ii.id in <include refid="list"/>
	</select>
	
	<select id="findShipments" resultType="Shipments">
		
		SELECT --DISTINCT
		       ii.id AS [id],
		       'FreightSystem' AS createdby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		       'FreightSystem' AS updatedby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		       RTRIM(ihb.hawbno)  AS shipmentno,
			   RTRIM(ihb.consignee) AS BuyerCode,
		       RTRIM(ISNULL(ihd.pono, '')) AS [customerreferenceno],
		       '' AS AgentReferenceNo,
			   '' AS ShipperReferenceNo,
		       '' AS BookingReferenceNo,
		       CASE WHEN ii.sysname IN ('CRUISE') THEN 'CRUISE' ELSE 'FREIGHT' END AS OrderType,
			   RTRIM(ihb.contractno) AS CarrierContractNO,
		       'Air' AS modeoftransport,
		       ISNULL(ihb.arrival_date, '')  AS cargoreadydate,
		       ISNULL(ihb.arrival_date, '')  AS bookingdate,
		       '' AS shipmenttype,
		       RTRIM(UPPER(ihb.airport)) AS shipfrom,
		       ISNULL(imb.fldate, '') AS shipfrometddate,
		       RTRIM(UPPER(ihb.airport1)) AS shipto,
		       ISNULL(ihb.arrival_date, '') AS shiptoetadate,
		       '' AS movement,
		       ISNULL(CONVERT(DECIMAL(18, 4), ihb.no_of_pieces), 0) AS totalpackage,
		       RTRIM(ihb.pcs_unit) AS totalpackageuom,
		       ISNULL(CONVERT(DECIMAL(18, 4), ihb.no_of_pieces), 0) AS totalunit,
		       RTRIM(ihb.pcs_unit) AS totalunituom,
		       ISNULL(CONVERT(DECIMAL(18, 4), ihb.gwt), 0) AS totalgrossweight,
		       RTRIM(ihb.wt_unit) AS totalgrossweightuom,
		       0 AS totalnetweight,
		       'KGS' AS totalnetweightuom,
		       ISNULL(CONVERT(DECIMAL(18, 4), tihd.cbm), 0) AS totalvolume,
		       'CBM' AS totalvolumeuom,
		       '' AS [servicetype],
		       RTRIM(incoterms.IncotermsCode) AS Incoterm,
		       'Active' status,
				'0' as IsFCL
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN t_imp_hawb ihb (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
        		AND ii.codetype = 'SHIPMENTS'
				AND ii.code = ihb.hawbno
			INNER JOIN t_imp_mawb imb (nolock) on ihb.mawbno=imb.mawbno
			LEFT JOIN t_imp_hawb_detail ihd (Nolock) on ihb.hawbno=ihd.hawbno 
			LEFT JOIN incoterms (nolock) on ihb.del_term=incoterms.incotermscode
			--LEFT JOIN city lport (nolock) on ff.lportcode=lport.citycode
			--LEFT JOIN city dport (nolock) on ff.dportcode=dport.citycode
			LEFT JOIN (
		       SELECT hawbno, sum(round(ihd.length * ihd.width *  ihd.height*ihd.ctno/ 1000000,3) ) AS cbm
		       FROM dbo.t_imp_hawb_detail ihd (NOLOCK)
		       GROUP BY hawbno
		     ) AS tihd ON ihb.hawbno = tihd.hawbno
		WHERE ii.id IN <include refid="list"/>		
		
	</select> 
	
	<select id="findBillOfLadings" resultType="BillOfLadings">
	
SELECT DISTINCT
		       ii.id AS [id],
		       'FreightSystem' AS createdby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		       'FreightSystem' AS updatedby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		       RTRIM(ihb.hawbno) AS billofladingno,
		       ISNULL(aa.azureid, 0) AS executionagentid,
		       '' AS billofladingtype,
		       RTRIM(mc.carrdesc) AS maincarrier,
		       '' AS mainvessel,
		       ISNULL(ihb.gwt, 0) AS totalgrossweight,
		       RTRIM(ihb.wt_unit) AS totalgrossweightuom,
		       0 AS totalnetweight,
		        RTRIM(ihb.wt_unit) AS totalnetweightuom,
		       ISNULL(ihb.no_of_pieces, 0) AS totalpackage,
		       RTRIM(ihb.pcs_unit) AS totalpackageuom,
		       ISNULL(CONVERT(DECIMAL(18, 4),ihb.volwt*6/1000), 0) AS totalvolume,
		       'CBM' AS totalvolumeuom,
		       RTRIM(imb.jobno) AS jobnumber,
		       '' AS issuedate,
		       'Air' AS modeoftransport,
		       RTRIM(UPPER(ihb.airport)) AS shipfrom,
		       ISNULL(imb.fldate, '') AS shipfrometddate,
		       RTRIM(UPPER(ihb.airport1)) AS shipto,
		       ISNULL(ihb.arrival_date, '') AS shiptoetadate,
		       '' AS movement,
		       RTRIM(incoterms.IncotermsCode) AS Incoterm
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN t_imp_hawb ihb (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.[sysname] = #{sysname}
				AND ii.codetype = 'BILLOFLADINGS'
				AND ii.code = ihb.hawbno
			INNER JOIN <include refid="dbName"/> ss (NOLOCK) 
				ON ii.dbname = ss.dbname
				AND ii.sysname = ss.sysname
				AND ss.codetype = 'SHIPMENTS'
				AND ss.code = ihb.hawbno
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			INNER join t_imp_mawb imb (nolock) on ihb.mawbno=imb.mawbno
			LEFT join t_imp_hawb_detail ihd (Nolock) on ihb.hawbno=ihd.hawbno 
			INNER join t_master_carrier mc (Nolock) on imb.carrier=mc.carrcode
			LEFT JOIN incoterms (nolock) on ihb.del_term=incoterms.incotermscode
		     INNER JOIN <include refid="dbName"/> aa (NOLOCK) 
				ON ii.dbname = aa.dbname
				AND aa.sysname = 'MASTERDATA'
		        AND aa.codetype = 'ORGANIZATIONS'
				AND aa.code IN <include refid="companyCodelist"/>
				AND ISNULL(aa.isetltoazure, '') = 'Y'
		WHERE ii.id IN <include refid="list"/>	
		
	</select> 
	<select id="findMasterBills" resultType="MasterBills">
	SELECT DISTINCT
			   ii.id AS [id],
			   'FreightSystem' AS createdby,
			   CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			   'FreightSystem' AS updatedby,
			   CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
			   ISNULL(aa.azureid, 0) AS executionagentid,
			   RTRIM(ihb.mawbno) AS masterbillofladingno,
			   'Ocean bill of lading' AS masterbillofladingtype,
			   'Air' AS modeoftransport,
			   '' AS movement,
			   RTRIM(ISNULL(ihb.contractno,'')) AS carriercontractno,
			   RTRIM(mc.carrdesc) AS carriername,
			   RTRIM(mc.carrno)AS scac,
			   RTRIM(imb.flno) AS vesselflight,
			   '' AS voyage,
			   RTRIM(imb.flno) AS flightno,
			   --CASE WHEN vv.vesselname IN ('BY RAIL', 'BY TRAIN', 'BY TRUCK', 'BY COURIER', 'COURIER') THEN RTRIM(ibl.por_name) ELSE 
			   RTRIM(dpPort.countrycode) + RTRIM(dpPort.portcode)
			   AS placeofreceipt,
			   --CASE WHEN vv.vesselname IN ('BY RAIL', 'BY TRAIN', 'BY TRUCK', 'BY COURIER', 'COURIER') THEN RTRIM(soh.lportname) ELSE
			   RTRIM(dpPort.countrycode) + RTRIM(dpPort.portcode)
			   AS portofloading,
			   --CASE WHEN vv.vesselname IN ('BY RAIL', 'BY TRAIN', 'BY TRUCK', 'BY COURIER', 'COURIER') THEN RTRIM(soh.dportname) ELSE 
			   RTRIM(dstnPort.countrycode) + RTRIM(dstnPort.portcode)
			   AS portofdischarge,
			   --CASE WHEN vv.vesselname IN ('BY RAIL', 'BY TRAIN', 'BY TRUCK', 'BY COURIER', 'COURIER') THEN RTRIM(soh.pod_name) ELSE 
			   RTRIM(dstnPort.countrycode) + RTRIM(dstnPort.portcode)
			   AS placeofdelivery,
			   '' AS placeofissue,
			   ISNULL(imb.fldate, '') AS issuedate,
			   ISNULL(imb.fldate, '') AS OnBoardDate
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN t_imp_hawb ihb (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname =#{sysname}
				AND ii.codetype = 'MASTERBILLS'
				AND ii.code = ihb.mawbno
			INNER JOIN <include refid="dbName"/> ss (NOLOCK) 
				ON ii.dbname = ss.dbname
				AND ii.sysname = ss.sysname
				AND ss.codetype = 'SHIPMENTS'
				AND ihb.hawbno = ss.code
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			INNER join t_imp_mawb imb (nolock) on ihb.mawbno=imb.mawbno
			LEFT join t_imp_hawb_detail ihd (Nolock) on ihb.hawbno=ihd.hawbno 
			INNER join t_master_carrier mc (Nolock) on imb.carrier=mc.carrcode
			LEFT join <include refid="cvsDB"/>.[dbo].[airport] dpPort on dpPort.portcode = ihb.depart
			LEFT join <include refid="cvsDB"/>.[dbo].[airport] dstnPort on dstnPort.portcode = ihb.dstn
			LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap airmap (NOLOCK)
				ON airmap.EDIName = 'SHIPMENT_PORTAL'
				AND airmap.codetype = 'AIRLINE'
				AND airmap.Status = 'Y'
				--AND ff.linercode = airmap.OurCode
			INNER JOIN <include refid="dbName"/> aa (NOLOCK) 
				ON ii.dbname = aa.dbname
				AND aa.sysname = 'MASTERDATA'
		        AND aa.codetype = 'ORGANIZATIONS'
				AND aa.code IN <include refid="companyCodelist"/>
				AND ISNULL(aa.isetltoazure, '') = 'Y'
		WHERE ii.id IN <include refid="list"/>
     </select> 
	<select id="findContainers" resultType="Containers">
	SELECT DISTINCT
		       ii.id AS [id],
		       'FreightSystem' AS createdby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		       'FreightSystem' AS updatedby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		       'LCL' AS containerno,
		       RTRIM(imb.jobno) AS LoadPlanRefNo,
		       '' containertype,
		       RTRIM(UPPER(ihb.airport))  AS shipfrom,
		       ISNULL(imb.fldate, '') AS shipfrometddate,
		       RTRIM(UPPER(ihb.airport1))  AS shipto,
		       ISNULL(ihb.arrival_date, '') AS shiptoetadate,
			   '' AS loadingdate,
		       '' AS sealno,
			   '' AS sealno2,
			   '' AS carriersono,
			   '' AS movement,
		       ISNULL(ihb.gwt, 0) AS totalgrossweight,
		       RTRIM(ihb.wt_unit) AS totalgrossweightuom,
		       0 AS totalnetweight,
		       RTRIM(ihb.wt_unit) AS totalnetweightuom,
			   ISNULL(ihb.no_of_pieces, 0) AS totalpackage,
		       RTRIM(ihb.pcs_unit) AS totalpackageuom,
		       ISNULL(CONVERT(DECIMAL(18, 4),ihb.volwt*6/1000), 0) AS totalvolume,
		       'CBM' AS totalvolumeuom,
		        0 as IsFCL
		FROM <include refid="dbName"/> ii (NOLOCK) 
			INNER JOIN t_imp_hawb ihb (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'CONTAINERS'
				AND ii.code = ihb.jobno
			INNER join t_imp_mawb imb (nolock) on ihb.mawbno=imb.mawbno
			LEFT join t_imp_hawb_detail ihd (Nolock) on ihb.hawbno=ihd.hawbno 
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)		
				ON ii.dbname = ss.dbname
				AND ii.sysname = ss.sysname
		        AND ss.codetype = 'SHIPMENTS'
				AND ihb.hawbno = ss.code
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			
		WHERE ii.id IN <include refid="list"/>
	</select> 
	<select id="findConsolidations" resultType="Consolidations">
	SELECT DISTINCT
		       ii.id AS [id],
		       'FreightSystem' AS createdby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		       'FreightSystem' AS updatedby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		       'LCL' AS containerno,
		       '' AS sealno,
		       '' AS sealno2,
		       nn.azureid AS containerid,
		       RTRIM(imb.jobno) AS ConsolidationNo,
		       'Air' AS modeoftransport,
		       '' AS containertype,
		       '' AS origincfs,
		       ISNULL(imb.fldate, '') AS cfscutoffdate,
			   '' AS loadingdate,
			   '' AS carriersono,
			   ISNULL(ihb.gwt, 0) AS totalgrossweight,
		       RTRIM(ihb.wt_unit) AS totalgrossweightuom,
		       0 AS totalnetweight,
		       RTRIM(ihb.wt_unit) AS totalnetweightuom,
			   ISNULL(ihb.no_of_pieces, 0) AS totalpackage,
		       RTRIM(ihb.pcs_unit) AS totalpackageuom,
		       ISNULL(CONVERT(DECIMAL(18, 4),ihb.volwt*6/1000), 0) AS totalvolume,
			   'CBM' AS totalvolumeuom
		FROM <include refid="dbName"/> ii (NOLOCK) 
			INNER JOIN t_imp_hawb ihb (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'CONSOLIDATIONS'
				AND ii.code = ihb.jobno
			INNER join t_imp_mawb imb (nolock) on ihb.mawbno=imb.mawbno
			LEFT join t_imp_hawb_detail ihd (Nolock) on ihb.hawbno=ihd.hawbno 
			INNER JOIN <include refid="dbName"/> nn (NOLOCK) 
				ON ii.dbname = nn.dbname
				AND ii.sysname = nn.sysname
				AND nn.codetype = 'CONTAINERS'
				AND ii.code = nn.code
		        --AND ii.code2 = nn.code2
		        AND ISNULL(nn.isetltoazure, '') = 'Y'
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)		
				ON ii.dbname = ss.dbname
				AND ii.sysname = ss.sysname
		        AND ss.codetype = 'SHIPMENTS'
				AND ss.code = ihb.hawbno 
				AND ISNULL(ss.isetltoazure, '') = 'Y'	
		WHERE ii.id IN <include refid="list"/>
		
	</select> 
	<select id="findConsignments" resultType="Consignments">
		SELECT DISTINCT
		       ii.id AS [id],
		       'FreightSystem' AS createdby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		       'FreightSystem' AS updatedby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		       ss.azureid AS shipmentid,
		       'Destination Agent' AS consignmenttype,
		       ISNULL(imb.fldate, '') AS consignmentdate,
		       ISNULL(aa.azureid, 0) AS executionagentid,
			   RTRIM(UPPER(ihb.airport)) AS shipfrom,
		       ISNULL(imb.fldate, '') AS shipfrometddate,
		       RTRIM(UPPER(ihb.airport1)) AS shipto,
		       ISNULL(ihb.arrival_date, '') AS shiptoetadate,
		       'Active' AS STATUS,
		       'Air' AS modeoftransport,
		       '' AS movement,
		       ISNULL(ihb.no_of_pieces, 0) AS unit,
		       RTRIM(ihb.pcs_unit) AS unituom,
		       ISNULL(ihb.no_of_pieces, 0) AS package,
		       RTRIM(ihb.pcs_unit) AS packageuom,
		       ISNULL(CONVERT(DECIMAL(18, 4),ihb.volwt*6/1000), 0) AS volume,
		       'CBM' AS volumeuom,
		       ISNULL(ihb.gwt, 0) AS grossweight,
		       RTRIM(ihb.wt_unit) AS grossweightuom,
		       0 AS netweight,
		       RTRIM(ihb.wt_unit) AS netweightuom,
		       CASE WHEN hh.azureid IS NULL THEN '' ELSE CONVERT(VARCHAR,hh.azureid) END AS housebillid,
		       CASE WHEN mm.azureid IS NULL THEN '' ELSE CONVERT(VARCHAR,mm.azureid) END AS masterbillid,
		       0 AS triangletradeflag,
		       0 AS memobolflag,
		       1 AS [sequence]
		FROM <include refid="dbName"/> ii (NOLOCK) 
			INNER JOIN t_imp_hawb ihb (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'CONSIGNMENTS'
				AND ii.code = ihb.hawbno	
			INNER join t_imp_mawb imb (nolock) on ihb.mawbno=imb.mawbno
			LEFT join t_imp_hawb_detail ihd (Nolock) on ihb.hawbno=ihd.hawbno 
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON ii.dbname = ss.dbname
				AND ii.sysname = ss.sysname
				AND ss.codetype = 'SHIPMENTS'
				AND ss.code = ihb.hawbno
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			LEFT JOIN <include refid="dbName"/> hh (NOLOCK) 
				ON ss.dbname = hh.dbname
				AND ss.sysname = hh.sysname
				AND hh.codetype = 'BILLOFLADINGS'
				AND ihb.hawbno = hh.code
				AND ISNULL(hh.isetltoazure, '') = 'Y'
			LEFT JOIN <include refid="dbName"/> mm (NOLOCK)
				ON  ss.dbname = mm.dbname
				AND ss.sysname = mm.sysname
		        AND mm.codetype = 'MASTERBILLS'
		        AND ihb.mawbno = mm.code
		        AND ISNULL(mm.isetltoazure, '') = 'Y'
		    INNER JOIN <include refid="dbName"/> aa (NOLOCK) 
				ON ii.dbname = aa.dbname
				AND aa.sysname = 'MASTERDATA'
		        AND aa.codetype = 'ORGANIZATIONS'
				AND aa.code IN <include refid="companyCodelist"/>
				AND ISNULL(aa.isetltoazure, '') = 'Y'
		WHERE ii.id IN <include refid="list"/>
	</select> 
	<select id="findCargoDetails" resultType="CargoDetails">
	
SELECT
		       ii.id AS [id],
		       'FreightSystem' AS createdby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		       'FreightSystem' AS updatedby,
		       CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		       ss.azureid AS shipmentid,
		       CASE WHEN ss.sysname IN ('CRUISE') THEN 'CRUISE' ELSE 'FREIGHT' END AS OrderType,
		       '1' AS [sequence],
		       ihb.othercharge AS shippingmarks,
		       ihb.[description] AS [description],
		       ISNULL(ihb.no_of_pieces, 0) AS unit,
		       RTRIM(ihb.pcs_unit) AS unituom,
		       ISNULL(ihb.no_of_pieces, 0) AS package,
		       RTRIM(ihb.pcs_unit) AS packageuom,
		       ISNULL(CONVERT(DECIMAL(18, 4),ihb.volwt*6/1000), 0) AS volume,
		       'CBM' AS volumeuom,
		       ISNULL(ihb.gwt, 0) AS grossweight,
		       RTRIM(ihb.wt_unit) AS grossweightuom,
		       0 AS netweight,
		       RTRIM(ihb.wt_unit) AS netweightuom,
		       RTRIM(ihb.commodity) AS commodity,
		       '' AS hscode,
		       RTRIM(ISNULL(ihd.pono,'')) AS productnumber,
		       RTRIM(apcty.countryname) AS countryoforigin
		FROM <include refid="dbName"/> ii(NOLOCK)
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'CARGODETAILS'
				AND ii.dbname = ss.dbname
				AND ii.sysname = ss.sysname
				AND ss.codetype = 'SHIPMENTS'
				AND ii.code = ss.code
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			INNER JOIN t_imp_hawb ihb (NOLOCK) ON CAST(ss.code AS CHAR) = ihb.hawbno
			INNER join t_imp_mawb imb (nolock) on ihb.mawbno=imb.mawbno
			LEFT join t_imp_hawb_detail ihd (Nolock) on ihb.hawbno=ihd.hawbno
			INNER JOIN <include refid="cvsDB"/>.[dbo].[airport] ap (NOLOCK) ON ap.portcode = ihb.depart
			INNER JOIN <include refid="cvsDB"/>.[dbo].country apcty (NOLOCK) ON ap.countrycode = apcty.countrycode
			
		WHERE ii.id IN <include refid="list"/>
	</select> 
	<select id="findShipmentLoads" resultType="ShipmentLoads">
		SELECT DISTINCT
		    ii.id AS [id],
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    ss.azureid AS shipmentid,
		    cc.azureid AS consignmentid,
		    oo.azureid AS consolidationid,
		    nn.azureid AS containerid,
		    'Air' AS modeoftransport,
		    '' AS carrierbookingno,
		     0 as IsFCL,
		    RTRIM(ihb.airport) AS loadingplace,
		    '' AS loadingpartyid,
		    '' as EquipmentType
		FROM <include refid="dbName"/> ii (NOLOCK) 
			INNER JOIN t_imp_hawb ihb (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'SHIPMENTLOADS'
				AND ii.code = ihb.hawbno
				AND ii.code2 = ihb.jobno
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON ii.dbname = ss.dbname
				AND ii.sysname = ss.sysname
				AND ss.codetype = 'SHIPMENTS'
				AND ihb.hawbno = ss.code
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			INNER JOIN <include refid="dbName"/> cc (NOLOCK)
				ON ss.dbname = cc.dbname
				AND ss.sysname = cc.sysname
				AND cc.codetype = 'CONSIGNMENTS'
				AND ihb.hawbno = cc.code
				AND ISNULL(cc.isetltoazure, '') = 'Y'
			LEFT JOIN <include refid="dbName"/> oo (NOLOCK)
				ON ss.dbname = oo.dbname
				AND ss.sysname = oo.sysname
				AND oo.codetype = 'CONSOLIDATIONS'
				AND ihb.jobno = oo.code
				--AND ihb.cfs_containerno = oo.code2
				AND ISNULL(oo.isetltoazure, '') = 'Y'
			INNER JOIN <include refid="dbName"/> nn (NOLOCK)
				ON ss.dbname = nn.dbname
				AND ss.sysname = nn.sysname
				AND nn.codetype = 'CONTAINERS'
				AND ihb.jobno = nn.code
				AND ISNULL(nn.isetltoazure, '') = 'Y'
		WHERE ii.id IN <include refid="list"/>
	</select> 
	<select id="findShipmentLoadDetails" resultType="ShipmentLoadDetails">
		SELECT --DISTINCT
		    ii.id AS [id],
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    ss.azureid AS shipmentid,
		    cc.azureid AS consignmentid,
		    dd.azureid AS cargodetailid,
		    sl.azureid AS shipmentloadid,
		    nn.azureid AS containerid,
		    oo.azureid AS consolidationid,
		    1 AS Sequence,
		    ISNULL(ihb.no_of_pieces, 0) AS package,
		    RTRIM(ihb.pcs_unit) AS packageuom,
		    ISNULL(ihb.no_of_pieces, 0) AS unit,
		    RTRIM(ihb.pcs_unit) AS unituom,
		    ISNULL(CONVERT(DECIMAL(18, 4),ihb.volwt*6/1000), 0) AS volume,
		    'CBM' AS volumeuom,
		    ISNULL(ihb.gwt, 0) AS grossweight,
		    RTRIM(ihb.wt_unit) AS grossweightuom,
		    0 AS netweight,
		    RTRIM(ihb.wt_unit) AS netweightuom
		FROM <include refid="dbName"/> ii (NOLOCK) 
			INNER JOIN t_imp_hawb ihb (NOLOCK)		
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'SHIPMENTLOADDETAILS'
				AND ii.code = ihb.hawbno
				AND CAST(ii.code2 AS CHAR) = ihb.jobno --ii.code2 = lph.lp_no
			LEFT join t_imp_hawb_detail ihd (Nolock) on ihb.hawbno=ihd.hawbno 
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON ii.dbname = ss.dbname
				AND ii.sysname = ss.sysname
				AND ss.codetype = 'SHIPMENTS'
				AND ii.code = ss.code --SO#
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			INNER JOIN <include refid="dbName"/> cc (NOLOCK)
				ON ss.dbname = cc.dbname
				AND ss.sysname = cc.sysname
				AND cc.codetype = 'CONSIGNMENTS'
				AND ii.code = cc.code --SO#
				AND ISNULL(cc.isetltoazure, '') = 'Y'
			INNER JOIN <include refid="dbName"/> dd (NOLOCK)
				ON ss.dbname = dd.dbname
				AND ss.sysname = dd.sysname
		        AND dd.codetype = 'CARGODETAILS'
		        AND ii.code = dd.code
		        AND RTRIM(ISNULL(ihd.pono,'')) = ISNULL(dd.code3, '')
		        AND ISNULL(dd.isetltoazure, '') = 'Y'	
		        AND ISNULL(dd.status, '') NOT IN ('DELETE','DELETED')
			INNER JOIN <include refid="dbName"/> sl (NOLOCK)
				ON ss.dbname = sl.dbname
				AND ss.sysname = sl.sysname
				AND sl.codetype = 'SHIPMENTLOADS'
				AND ihb.hawbno = sl.code
				AND ihb.jobno = sl.code2
				AND ISNULL(sl.isetltoazure, '') = 'Y'
			INNER JOIN <include refid="dbName"/> nn (NOLOCK)
				ON ss.dbname = nn.dbname
				AND ss.sysname = nn.sysname
				AND nn.codetype = 'CONTAINERS'
				AND ihb.jobno = nn.code
				AND ISNULL(nn.isetltoazure, '') = 'Y'
			LEFT JOIN <include refid="dbName"/> oo (NOLOCK)
				ON ss.dbname = oo.dbname
				AND ss.sysname = oo.sysname
				AND oo.codetype = 'CONSOLIDATIONS'
				AND oo.code = ihb.jobno
				AND ISNULL(oo.isetltoazure, '') = 'Y'
		WHERE ii.id IN <include refid="list"/>
	</select> 
	<select id="findBillOfLadingContacts" resultType="BillOfLadingContacts">
		SELECT 
			zz.id,
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    hh.azureid AS billofladingid,
		    oo.id AS organizationid,  --Destination Agent and Principal, consignee
		    zz.code3 AS organizationrole,
		    RTRIM(oo.Name) AS companyname,
		    RTRIM(oo.Address) AS [address],
		    RTRIM(oo.ContactName) AS contactname,
		    RTRIM(oo.ContactNumber) AS contactnumber,
		    RTRIM(oo.ContactEmail) AS contactemail
		FROM <include refid="dbName"/> zz (NOLOCK) --BILLOFLADINGCONTACTS
			INNER JOIN <include refid="dbName"/> hh (NOLOCK) --BILLOFLADINGS
				ON zz.dbname = #{db}
				AND zz.sysname = #{sysname}
				AND zz.codetype = 'BILLOFLADINGCONTACTS'
				AND zz.dbname = hh.dbname
				AND zz.sysname = hh.sysname
				AND hh.codetype = 'BILLOFLADINGS'
				AND zz.code = CONVERT(VARCHAR(50), hh.id)
				AND hh.isetltoazure = 'Y'
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'CMPYTYPE'
				AND map.Status = 'Y'
				AND zz.code3 = map.PartnerCode
				AND map.ourcode in ('P','A','C')
			INNER JOIN <include refid="azureMasterDB"/>.[dbo].[Organizations] oo (NOLOCK)
				ON CONVERT(INT, zz.code2) = oo.id
		WHERE zz.id IN <include refid="list"/>
		UNION
		SELECT 
			zz.id,
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    hh.azureid AS billofladingid,
		    ISNULL(CONVERT(INT, zz.code2), 0) AS organizationid,  --Orgin Agent
		    zz.code3 AS organizationrole,
			RTRIM(ISNULL(cinfo.custname, '')) AS companyname,
		    RTRIM(ISNULL(cinfo.address, '')) AS [address],
		    RTRIM(ISNULL(cinfo.contator, '')) AS contactname,
		    RTRIM(ISNULL(cinfo.phone, '')) AS contactnumber,
		    RTRIM(ISNULL(cinfo.email_adress, '')) AS contactemail
		FROM <include refid="dbName"/> zz (NOLOCK) --BILLOFLADINGCONTACTS
			INNER JOIN <include refid="dbName"/> hh (NOLOCK) --BILLOFLADINGS
				ON zz.dbname = #{db}
				AND zz.sysname = #{sysname}
				AND zz.codetype = 'BILLOFLADINGCONTACTS'
				AND zz.dbname = hh.dbname
				AND zz.sysname = hh.sysname
				AND hh.codetype = 'BILLOFLADINGS'
				AND zz.code = CONVERT(VARCHAR(50), hh.id)
				AND hh.isetltoazure = 'Y'
			INNER JOIN  t_imp_hawb ihb(nolock)  ON hh.code = ihb.hawbno
			INNER JOIN t_master_custinfo cinfo (nolock) ON ihb.agent=cinfo.custcode
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON zz.dbname = ss.dbname
				AND zz.sysname = ss.sysname
		        AND ss.codetype = 'SHIPMENTS'
		        AND ss.code = ihb.hawbno
		        AND ss.isetltoazure = 'Y'
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'CMPYTYPE'
				AND map.Status = 'Y'
				AND zz.code3 = map.PartnerCode
				AND map.ourcode IN ('O/A')
		WHERE zz.id IN <include refid="list"/>
		UNION
		SELECT 
			zz.id,
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    hh.azureid AS billofladingid,
		    ISNULL(CONVERT(INT, zz.code2), 0) AS organizationid,  --Supplier/Shipper 
		    zz.code3 AS organizationrole,
			RTRIM(ISNULL(cinfo.custname, '')) AS companyname,
		    RTRIM(ISNULL(cinfo.address, '')) AS [address],
		    RTRIM(ISNULL(cinfo.contator, '')) AS contactname,
		    RTRIM(ISNULL(cinfo.phone, '')) AS contactnumber,
		    RTRIM(ISNULL(cinfo.email_adress, '')) AS contactemail
		FROM <include refid="dbName"/> zz (NOLOCK) --BILLOFLADINGCONTACTS
			INNER JOIN <include refid="dbName"/> hh (NOLOCK) --BILLOFLADINGS
				ON zz.dbname = #{db}
				AND zz.sysname = #{sysname}
				AND zz.codetype = 'BILLOFLADINGCONTACTS'
				AND zz.dbname = hh.dbname
				AND zz.sysname = hh.sysname
				AND hh.codetype = 'BILLOFLADINGS'
				AND zz.code = CONVERT(VARCHAR(50), hh.id)
				AND hh.isetltoazure = 'Y'
			INNER JOIN  t_imp_hawb ihb(nolock)  ON hh.code = ihb.hawbno
			INNER JOIN t_master_custinfo cinfo (nolock) ON ihb.shipper=cinfo.custcode
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON zz.dbname = ss.dbname
				AND zz.sysname = ss.sysname
		        AND ss.codetype = 'SHIPMENTS'
		        AND ss.code = ihb.hawbno
		        AND ss.isetltoazure = 'Y'
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'CMPYTYPE'
				AND map.Status = 'Y'
				AND zz.code3 = map.PartnerCode
				AND map.ourcode IN ('V', 'S')
		WHERE zz.id IN <include refid="list"/>
		UNION
		SELECT 
			zz.id,
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    hh.azureid AS billofladingid,
		    ISNULL(CONVERT(INT, zz.code2), 0) AS organizationid,  -- Other party
		    zz.code3 AS organizationrole,
			RTRIM(ISNULL(cinfo.custname, '')) AS companyname,
		    RTRIM(ISNULL(cinfo.address, '')) AS [address],
		    RTRIM(ISNULL(cinfo.contator, '')) AS contactname,
		    RTRIM(ISNULL(cinfo.phone, '')) AS contactnumber,
		    RTRIM(ISNULL(cinfo.email_adress, '')) AS contactemail
		FROM <include refid="dbName"/> zz (NOLOCK) --BILLOFLADINGCONTACTS
			INNER JOIN <include refid="dbName"/> hh (NOLOCK) --BILLOFLADINGS
				ON zz.dbname = #{db}
				AND zz.sysname = #{sysname}
				AND zz.codetype = 'BILLOFLADINGCONTACTS'
				AND zz.dbname = hh.dbname
				AND zz.sysname = hh.sysname
				AND hh.codetype = 'BILLOFLADINGS'
				AND zz.code = CONVERT(VARCHAR(50), hh.id)
				AND hh.isetltoazure = 'Y'
			INNER JOIN  t_imp_hawb ihb(nolock)  ON hh.code = ihb.hawbno
			INNER JOIN t_master_custinfo cinfo (nolock) ON ihb.notify=cinfo.custcode
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON zz.dbname = ss.dbname
				AND zz.sysname = ss.sysname
		        AND ss.codetype = 'SHIPMENTS'
		        AND ss.code = ihb.hawbno
		        AND ss.isetltoazure = 'Y'
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'CMPYTYPE'
				AND map.Status = 'Y'
				AND zz.code3 = map.PartnerCode
				AND map.ourcode IN ( 'N1', 'N2')
		WHERE zz.id IN <include refid="list"/>

	</select> 
	<select id="findMasterBillContacts" resultType="MasterBillContacts">
		
		
		
		SELECT --DISTINCT
		    zz.id AS [id],
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    mm.azureid AS masterbillofladingid,
		    oo.id AS organizationid,
		    zz.code3 AS organizationrole,
		    RTRIM(oo.Name) AS companyname,
		    RTRIM(oo.Address) AS [address],
		    RTRIM(oo.ContactName) AS contactname,
		    RTRIM(oo.ContactNumber) AS contactnumber,
		    RTRIM(oo.ContactEmail) AS contactemail
		FROM <include refid="dbName"/> zz (NOLOCK)
			INNER JOIN <include refid="dbName"/> mm (NOLOCK)
				ON zz.dbname = #{db}
				AND zz.sysname = #{sysname}
				AND zz.codetype = 'MASTERBILLCONTACTS'
				AND zz.dbname = mm.dbname
				AND zz.sysname = mm.sysname
				AND mm.codetype = 'MASTERBILLS'
				AND zz.code= CONVERT(VARCHAR(50),mm.id)
				AND mm.isetltoazure = 'Y'
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'CMPYTYPE'
				AND map.Status = 'Y'
				AND zz.code3 = map.PartnerCode
				AND map.ourcode IN ('A','P')  --Origin Agent, Principal
			INNER JOIN <include refid="azureMasterDB"/>.[dbo].[Organizations] oo (NOLOCK)
				ON CONVERT(INT, zz.code2) = oo.id
		WHERE zz.id IN <include refid="list"/>
		UNION
		SELECT 
			zz.id,
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    mm.azureid AS masterbillofladingid,
		    ISNULL(CONVERT(INT, zz.code2), 0) AS organizationid,
		    map.PartnerCode AS organizationrole,
		    RTRIM(ISNULL(cinfo.custname, '')) AS companyname,
		    RTRIM(ISNULL(cinfo.address, '')) AS [address],
		    RTRIM(ISNULL(cinfo.contator, '')) AS contactname,
		    RTRIM(ISNULL(cinfo.phone, '')) AS contactnumber,
		    RTRIM(ISNULL(cinfo.email_adress, '')) AS contactemail
		FROM <include refid="dbName"/> zz (NOLOCK)
			INNER JOIN <include refid="dbName"/> mm (NOLOCK)
				ON zz.dbname = #{db}
				AND zz.sysname = #{sysname}
				AND zz.codetype = 'MASTERBILLCONTACTS'
				AND zz.dbname = mm.dbname
				AND zz.sysname = mm.sysname
		        AND mm.codetype = 'MASTERBILLS'
		        AND zz.code = CONVERT(VARCHAR(50), mm.id)
		        AND mm.isetltoazure = 'Y'
			INNER JOIN  t_imp_hawb ihb(nolock)  ON mm.code = ihb.mawbno
			INNER JOIN t_master_custinfo cinfo (nolock) ON ihb.agent=cinfo.custcode
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'CMPYTYPE'
				AND map.Status = 'Y'
				AND zz.code3 = map.PartnerCode
				AND map.ourcode IN ('O/A')  --Dest Agent
		WHERE zz.id IN <include refid="list"/>
		
		

	</select> 
	<select id="findShipmentContacts" resultType="ShipmentContacts">
						
SELECT 
			zz.id,
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    ss.azureid AS shipmentid,
		    oo.id AS organizationid,  --Origin Agent and Principal
		    zz.code3 AS organizationrole,
		    RTRIM(oo.Name) AS companyname,
		    RTRIM(oo.Address) AS [address],
		    RTRIM(oo.ContactName) AS contactname,
		    RTRIM(oo.ContactNumber) AS contactnumber,
		    RTRIM(oo.ContactEmail) AS contactemail
		FROM <include refid="dbName"/> zz (NOLOCK) --SHIPMENTCONTACTS
			INNER JOIN <include refid="dbName"/> ss (NOLOCK) --SHIPMENTS
				ON zz.dbname = #{db}
				AND zz.sysname = #{sysname}
				AND zz.codetype = 'SHIPMENTCONTACTS'
				AND zz.dbname = ss.dbname
				AND zz.sysname = ss.sysname
		        AND ss.codetype = 'SHIPMENTS'
		        AND zz.code = CONVERT(VARCHAR(50), ss.id)
		        AND ss.isetltoazure = 'Y'
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'CMPYTYPE'
				AND map.Status = 'Y'
				AND zz.code3 = map.PartnerCode
				AND map.ourcode in ('A','P','C')
			INNER JOIN <include refid="azureMasterDB"/>.[dbo].[Organizations] oo (NOLOCK)
				ON CONVERT(INT, zz.code2) = oo.id
		WHERE zz.id IN <include refid="list"/>
		UNION
		SELECT 
			zz.id,
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    ss.azureid AS shipmentid,
		    ISNULL(CONVERT(INT, zz.code2), 0) AS organizationid,  --Orgin Agent
		    map.PartnerCode AS organizationrole,
			RTRIM(ISNULL(cinfo.custname, '')) AS companyname,
		    RTRIM(ISNULL(cinfo.address, '')) AS [address],
		    RTRIM(ISNULL(cinfo.contator, '')) AS contactname,
		    RTRIM(ISNULL(cinfo.phone, '')) AS contactnumber,
		    RTRIM(ISNULL(cinfo.email_adress, '')) AS contactemail
		FROM <include refid="dbName"/> zz (NOLOCK) --SHIPMENTCONTACTS
			INNER JOIN <include refid="dbName"/> ss (NOLOCK) --SHIPMENTS
				ON zz.dbname = #{db}
				AND zz.sysname = #{sysname}
				AND zz.codetype = 'SHIPMENTCONTACTS'
				AND zz.dbname = ss.dbname
				AND zz.sysname = ss.sysname
		        AND ss.codetype = 'SHIPMENTS'
		        AND zz.code = CONVERT(VARCHAR(50), ss.id)
		        AND ss.isetltoazure = 'Y'
			INNER JOIN  t_imp_hawb ihb(nolock)  ON ss.code = ihb.hawbno
			INNER JOIN t_master_custinfo cinfo (nolock) ON ihb.agent=cinfo.custcode
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'CMPYTYPE'
				AND map.Status = 'Y'
				AND zz.code3 = map.PartnerCode
				AND map.ourcode IN ('O/A')
		WHERE zz.id IN <include refid="list"/>
		UNION
		SELECT 
			zz.id,
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    ss.azureid AS shipmentid,
		    ISNULL(CONVERT(INT, zz.code2), 0) AS organizationid,  -- Supplier/Shipper
		    map.PartnerCode AS organizationrole,
			RTRIM(ISNULL(cinfo.custname, '')) AS companyname,
		    RTRIM(ISNULL(cinfo.address, '')) AS [address],
		    RTRIM(ISNULL(cinfo.contator, '')) AS contactname,
		    RTRIM(ISNULL(cinfo.phone, '')) AS contactnumber,
		    RTRIM(ISNULL(cinfo.email_adress, '')) AS contactemail
		FROM <include refid="dbName"/> zz (NOLOCK) --SHIPMENTCONTACTS
			INNER JOIN <include refid="dbName"/> ss (NOLOCK) --SHIPMENTS
				ON zz.dbname = #{db}
				AND zz.sysname = #{sysname}
				AND zz.codetype = 'SHIPMENTCONTACTS'
				AND zz.dbname = ss.dbname
				AND zz.sysname = ss.sysname
		        AND ss.codetype = 'SHIPMENTS'
		        AND zz.code = CONVERT(VARCHAR(50), ss.id)
		        AND ss.isetltoazure = 'Y'
			INNER JOIN  t_imp_hawb ihb(nolock)  ON ss.code = ihb.hawbno
			INNER JOIN t_master_custinfo cinfo (nolock) ON ihb.shipper=cinfo.custcode
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'CMPYTYPE'
				AND map.Status = 'Y'
				AND zz.code3 = map.PartnerCode
				AND map.ourcode IN ('V', 'S')
		WHERE zz.id IN <include refid="list"/>
		UNION
		SELECT 
			zz.id,
		    'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    ss.azureid AS shipmentid,
		    ISNULL(CONVERT(INT, zz.code2), 0) AS organizationid,  -- and Other party
		    map.PartnerCode AS organizationrole,
			RTRIM(ISNULL(cinfo.custname, '')) AS companyname,
		    RTRIM(ISNULL(cinfo.address, '')) AS [address],
		    RTRIM(ISNULL(cinfo.contator, '')) AS contactname,
		    RTRIM(ISNULL(cinfo.phone, '')) AS contactnumber,
		    RTRIM(ISNULL(cinfo.email_adress, '')) AS contactemail
		FROM <include refid="dbName"/> zz (NOLOCK) --SHIPMENTCONTACTS
			INNER JOIN <include refid="dbName"/> ss (NOLOCK) --SHIPMENTS
				ON zz.dbname = #{db}
				AND zz.sysname = #{sysname}
				AND zz.codetype = 'SHIPMENTCONTACTS'
				AND zz.dbname = ss.dbname
				AND zz.sysname = ss.sysname
		        AND ss.codetype = 'SHIPMENTS'
		        AND zz.code = CONVERT(VARCHAR(50), ss.id)
		        AND ss.isetltoazure = 'Y'
			INNER JOIN  t_imp_hawb ihb(nolock)  ON ss.code = ihb.hawbno
			INNER JOIN t_master_custinfo cinfo (nolock) ON ihb.notify=cinfo.custcode
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'CMPYTYPE'
				AND map.Status = 'Y'
				AND zz.code3 = map.PartnerCode
				AND map.ourcode IN ('N1', 'N2')
		WHERE zz.id IN <include refid="list"/>
	</select> 
	<select id="findItineraries" resultType="Itineraries">
				
	SELECT DISTINCT
			   ii.id AS [id],
			   'FreightSystem' AS createdby,
			   CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			   'FreightSystem' AS updatedby,
			   CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
			   ii.seq AS [sequence],
			   'Air' AS modeoftransport,
			   RTRIM(mc.carrdesc) AS carriername,
			   RTRIM(mc.carrno) AS scac,
			   RTRIM(imb.carrier)AS airlinecode,
			   RTRIM(imb.flno) vesselflight,
			   '' vesselname,
			   '' voyage,
			   RTRIM(imb.flno) AS flightnumber,
			    RTRIM(dpPort.countrycode) + RTRIM(dpPort.portcode) AS loadingport,
			   imb.fldate AS etddate,
			   ihb.arrival_date AS etadate,
			   RTRIM(dstnPort.countrycode) + RTRIM(dstnPort.portcode) AS dischargeport,
			   CASE WHEN ((mapp.Status IS NOT NULL) AND imb.fldate IS NOT NULL AND imb.fldate <![CDATA[ < ]]>= GETDATE()) 
			   THEN imb.fldate ELSE NULL END AS atddate,
			   CASE WHEN (ihb.arrival_date IS NOT NULL AND ihb.arrival_date  <![CDATA[ < ]]>= GETDATE()) 
			   THEN ihb.arrival_date ELSE NULL END AS atadate,
			   '' AS CYOpenDate,
			   '' AS CYClosingDate,
			   'Active' AS [status]
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN t_imp_mawb imb(nolock)  
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'ITINERARIES'
				AND ii.code = imb.flno
				--AND ii.code2 = ff.voyage
			INNER JOIN t_imp_hawb ihb (nolock) on ihb.mawbno=imb.mawbno
			INNER JOIN t_master_carrier mc (Nolock) on imb.carrier=mc.carrcode
			LEFT JOIN <include refid="cvsDB"/>.[dbo].[airport] dpPort on dpPort.portcode = ihb.depart
			LEFT JOIN <include refid="cvsDB"/>.[dbo].[airport] dstnPort on dstnPort.portcode = ihb.dstn
			INNER JOIN <include refid="dbName"/> ss (NOLOCK) 
				ON ii.dbname = ss.dbname
				AND ii.sysname = ss.sysname
				AND ss.codetype = 'SHIPMENTS'
				AND ihb.hawbno = ss.code
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap airmap (NOLOCK)
				ON airmap.EDIName = 'SHIPMENT_PORTAL'
				AND airmap.codetype = 'AIRLINE'
				AND airmap.Status = 'Y'
				AND imb.carrier = airmap.OurCode
			LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap mapp (NOLOCK)
				ON mapp.EDIName = 'SHIPMENT_PORTAL'
				AND mapp.codetype = 'ETLPARAMETER'
				AND mapp.Status = 'Y'
				AND mapp.OurCode = 'SYSNAME_ITINERARIES_WITHOUT_EBOOKINGNO'
				AND mapp.PartnerCode = ii.sysname
		WHERE ii.seq = 1
		AND ii.id IN <include refid="list"/>
		
	</select> 
	<select id="findBillOfLadingConsignments" resultType="BillOfLadingConsignments">
		
	SELECT DISTINCT
			cc.azureid AS consignmentid,
			ii.azureid AS billofladingid,
			ss.azureid AS shipmentid,
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN t_imp_hawb ihb
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND	ii.codetype = 'BILLOFLADINGS'
				AND ii.code = ihb.hawbno
				AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'
			INNER JOIN <include refid="dbName"/> cc (NOLOCK)
				ON ii.dbname = cc.dbname
				AND ii.sysname = cc.sysname
				AND cc.codetype = 'CONSIGNMENTS'
				AND ihb.hawbno = cc.code
				AND cc.code2 IN <include refid="companyCodelist"/>
				AND cc.isetltoazure IS NOT NULL AND cc.isetltoazure = 'Y'
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON ii.dbname = ss.dbname
				AND ii.sysname = ss.sysname
				AND ss.codetype = 'SHIPMENTS'
				AND ihb.hawbno = ss.code
				AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
		WHERE 1=1
		AND (
			--Retrieve data for 1 or 2 days - configurable
			ii.lastupdate >= <include refid="lastUpdatedDay"/> 
			OR cc.lastupdate >= <include refid="lastUpdatedDay"/>
			OR ss.lastupdate >= <include refid="lastUpdatedDay"/>
			OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
			OR cc.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			OR ss.AzureLastupdate >= <include refid="lastUpdatedDay"/>
		) AND NOT EXISTS (
			SELECT 1
			FROM <include refid="azureDB"/>.[dbo].[billofladingconsignments] zz (NOLOCK)
			WHERE zz.consignmentid IS NOT NULL AND cc.azureid IS NOT NULL AND zz.consignmentid = cc.azureid
			AND zz.billofladingid IS NOT NULL AND ii.azureid IS NOT NULL AND zz.billofladingid = ii.azureid
			AND zz.shipmentid IS NOT NULL AND ss.azureid IS NOT NULL AND zz.shipmentid = ss.azureid
		)
	
	</select> 
	<select id="findBillOfLadingItineraries" resultType="BillOfLadingItineraries">
		
	SELECT DISTINCT
			rr.azureid AS itineraryid,
			ii.azureid AS billofladingid,
			mm.azureid AS masterbillofladingid,
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN t_imp_hawb ihb
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'BILLOFLADINGS'
				AND ii.code = ihb.hawbno
				AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'
			INNER join t_imp_mawb imb (nolock) on ihb.mawbno=imb.mawbno
			INNER JOIN <include refid="dbName"/> rr (NOLOCK)
				ON ii.dbname = rr.dbname
				AND ii.sysname = rr.sysname
		        AND rr.codetype = 'ITINERARIES'
				AND rr.seq = 1 AND imb.flno = rr.code
				AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
			LEFT JOIN <include refid="dbName"/> mm (NOLOCK)
				ON ii.dbname = mm.dbname
				AND ii.sysname = mm.sysname
				AND mm.codetype = 'MASTERBILLS'
				AND ihb.mawbno = mm.code
				AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
		WHERE 1=1
		AND (
			--Retrieve data for 1 or 2 days - configurable
			ii.lastupdate >= <include refid="lastUpdatedDay"/> 
			OR rr.lastupdate >= <include refid="lastUpdatedDay"/>
			OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
			OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
			OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
		) AND NOT EXISTS (
			SELECT 1
			FROM <include refid="azureDB"/>.[dbo].[billofladingitineraries] zz (NOLOCK)
			WHERE zz.itineraryid IS NOT NULL AND rr.azureid IS NOT NULL AND zz.itineraryid = rr.azureid
			AND zz.billofladingid IS NOT NULL AND ii.azureid IS NOT NULL AND zz.billofladingid = ii.azureid
			AND ((zz.masterbillofladingid IS NULL AND mm.azureid IS NULL) OR (zz.masterbillofladingid IS NOT NULL AND mm.azureid IS NOT NULL AND zz.masterbillofladingid = mm.azureid))
		)

    </select> 
	<select id="findShipmentBillOfLadings" resultType="ShipmentBillOfLadings">
	
		SELECT DISTINCT
			ss.azureid AS shipmentid,
			ii.azureid AS billofladingid,
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate
		FROM <include refid="dbName"/> ss (NOLOCK)
				INNER JOIN t_imp_hawb ihb
					ON ss.dbname = #{db}
					AND ss.sysname = #{sysname}
					AND ss.codetype = 'SHIPMENTS'
					AND ss.code = ihb.hawbno
					AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
				INNER JOIN <include refid="dbName"/> ii (NOLOCK)
					ON ss.dbname = ii.dbname
					AND ss.sysname = ii.sysname
					AND ii.codetype = 'BILLOFLADINGS'
					AND ihb.hawbno = ii.code
					AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'
		WHERE 1=1
		AND (
			--Retrieve data for 1 or 2 days - configurable
			ss.lastupdate >= <include refid="lastUpdatedDay"/>
			OR ii.lastupdate >= <include refid="lastUpdatedDay"/>
			OR ss.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/>
		) AND NOT EXISTS (
			SELECT 1
			FROM <include refid="azureDB"/>.[dbo].[shipmentbillofladings] zz (NOLOCK)
			WHERE zz.shipmentid IS NOT NULL AND ss.azureid IS NOT NULL AND zz.shipmentid = ss.azureid
			AND zz.billofladingid IS NOT NULL AND ii.azureid IS NOT NULL AND zz.billofladingid = ii.azureid
		)

	</select> 
	<select id="findBillOfLadingShipmentLoads" resultType="BillOfLadingShipmentLoads">
		SELECT DISTINCT
			ii.azureid AS billofladingid,
			sl.azureid AS shipmentloadid,
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
			nn.azureid AS containerid,
			oo.azureid AS consolidationid,
			mm.azureid AS masterbillofladingid,
		    0 AS IsFCL
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN t_imp_hawb ihb
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'BILLOFLADINGS'
				AND ii.code = ihb.hawbno
				AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'
			INNER JOIN <include refid="dbName"/> sl (NOLOCK)
				ON ii.dbname = sl.dbname
				AND ii.sysname = sl.sysname
				AND sl.codetype = 'SHIPMENTLOADS'
				AND ihb.hawbno = sl.code
				AND sl.isetltoazure IS NOT NULL AND sl.isetltoazure = 'Y'
			LEFT JOIN <include refid="dbName"/> nn (NOLOCK)
				ON ii.dbname = nn.dbname
				AND ii.sysname = nn.sysname
				AND nn.codetype = 'CONTAINERS'
				AND nn.code = ihb.jobno
				AND nn.isetltoazure IS NOT NULL AND nn.isetltoazure = 'Y'
			LEFT JOIN <include refid="dbName"/> oo (NOLOCK)
				ON 1=1
				AND ii.dbname = oo.dbname
				AND ii.sysname = oo.sysname
				AND oo.codetype = 'CONSOLIDATIONS'
				AND ihb.jobno = oo.code
				AND oo.isetltoazure IS NOT NULL AND oo.isetltoazure = 'Y'
			LEFT JOIN <include refid="dbName"/> mm (NOLOCK)
				ON ii.dbname = mm.dbname
				AND ii.sysname = mm.sysname
				AND mm.codetype = 'MASTERBILLS'
				AND ihb.mawbno = mm.code
				AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
		WHERE 1=1
		AND (
			--Retrieve data for 1 or 2 days - configurable
			ii.lastupdate >= <include refid="lastUpdatedDay"/> 
			OR sl.lastupdate >= <include refid="lastUpdatedDay"/>
			OR nn.lastupdate >= <include refid="lastUpdatedDay"/>
			OR oo.lastupdate >= <include refid="lastUpdatedDay"/>
			OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
			OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
			OR sl.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			OR nn.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			OR oo.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
		) AND NOT EXISTS (
			SELECT 1
			FROM <include refid="azureDB"/>.[dbo].[billofladingshipmentloads] zz (NOLOCK)
			WHERE zz.shipmentloadid IS NOT NULL AND sl.azureid IS NOT NULL AND zz.shipmentloadid = sl.azureid
			AND zz.billofladingid IS NOT NULL AND ii.azureid IS NOT NULL AND zz.billofladingid = ii.azureid
			AND ((zz.containerid IS NULL AND nn.azureid IS NULL) OR (zz.containerid IS NOT NULL AND nn.azureid IS NOT NULL AND zz.containerid = nn.azureid))
			AND ((zz.consolidationid IS NULL AND oo.azureid IS NULL) OR (zz.consolidationid IS NOT NULL AND oo.azureid IS NOT NULL AND zz.consolidationid = oo.azureid))
			AND ((zz.masterbillofladingid IS NULL AND mm.azureid IS NULL) OR (zz.masterbillofladingid IS NOT NULL AND mm.azureid IS NOT NULL AND zz.masterbillofladingid = mm.azureid))
			AND zz.isfcl = 0 
		)

	</select> 
	<select id="findConsignmentItineraries" resultType="ConsignmentItineraries">
		SELECT DISTINCT
			cc.azureid AS consignmentid,
			rr.azureid AS itineraryid,
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
			ss.azureid AS shipmentid,
			mm.azureid AS masterbillid,
			CASE WHEN rr.Id IS NOT NULL THEN rr.seq ELSE 1 END AS sequence
		FROM <include refid="dbName"/> ss (NOLOCK)
			INNER JOIN t_imp_hawb ihb
				ON ss.dbname = #{db}
				AND ss.sysname = #{sysname}
				AND ss.codetype = 'SHIPMENTS'
				AND ss.code = ihb.hawbno
				AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
			INNER JOIN t_imp_mawb imb ON ihb.mawbno = imb.mawbno
			INNER JOIN <include refid="dbName"/> cc (NOLOCK)
				ON ss.dbname = cc.dbname
				AND ss.sysname = cc.sysname
		        AND cc.codetype = 'CONSIGNMENTS'
		        AND ihb.hawbno = cc.code
				AND cc.code2 IN <include refid="companyCodelist"/>
				AND cc.isetltoazure IS NOT NULL AND cc.isetltoazure = 'Y'
			INNER JOIN <include refid="dbName"/> rr (NOLOCK)
				ON ss.dbname = rr.dbname
				AND ss.sysname = rr.sysname
		        AND rr.codetype = 'ITINERARIES'
				AND (rr.seq = 1 AND imb.flno = rr.code)
				AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
			LEFT JOIN <include refid="dbName"/> mm (NOLOCK)
				ON ss.dbname = mm.dbname
				AND ss.sysname = mm.sysname
				AND mm.codetype = 'MASTERBILLS'
				AND ihb.mawbno = mm.code
				AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
		WHERE 1=1
		AND (
			--Retrieve data for 1 or 2 days - configurable
			cc.lastupdate >= <include refid="lastUpdatedDay"/> 
			OR rr.lastupdate >= <include refid="lastUpdatedDay"/>
			OR ss.lastupdate >= <include refid="lastUpdatedDay"/>
			OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
			OR cc.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
			OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			OR ss.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
		) AND NOT EXISTS (
			SELECT 1
			FROM <include refid="azureDB"/>.[dbo].[consignmentitineraries] zz (NOLOCK)
			WHERE zz.shipmentid IS NOT NULL AND ss.azureid IS NOT NULL AND zz.shipmentid = ss.azureid
			AND zz.consignmentid IS NOT NULL AND cc.azureid IS NOT NULL AND zz.consignmentid = cc.azureid
			AND zz.itineraryid IS NOT NULL AND rr.azureid IS NOT NULL AND zz.itineraryid = rr.azureid
			AND ((zz.masterbillid IS NULL AND mm.azureid IS NULL) OR (zz.masterbillid IS NOT NULL AND mm.azureid IS NOT NULL AND zz.masterbillid = mm.azureid))
			AND zz.sequence = ISNULL(rr.seq, 1)
		)
	</select> 
	<select id="findContainerItineraries" resultType="ContainerItineraries">
		SELECT DISTINCT
			rr.azureid AS itineraryid,
			nn.azureid AS containerid,
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate
		FROM <include refid="dbName"/> ss (NOLOCK)
			INNER JOIN t_imp_hawb ihb
				ON ss.dbname = #{db}
				AND ss.sysname = #{sysname}
				AND ss.codetype = 'SHIPMENTS'
				AND ss.code = ihb.hawbno
				AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
			INNER JOIN t_imp_mawb imb ON ihb.mawbno = imb.mawbno
			INNER JOIN <include refid="dbName"/> rr (NOLOCK)
				ON ss.dbname = rr.dbname
				AND ss.sysname = rr.sysname
		        AND rr.codetype = 'ITINERARIES'
				AND (rr.seq = 1 AND imb.flno = rr.code)
				AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
			INNER JOIN <include refid="dbName"/> nn (NOLOCK)
				ON ss.dbname = nn.dbname
				AND ss.sysname = nn.sysname
				AND nn.codetype = 'CONTAINERS'
				AND nn.code = ihb.jobno
				AND nn.isetltoazure IS NOT NULL AND nn.isetltoazure = 'Y'
		WHERE 1=1
		AND (
			--Retrieve data for 1 or 2 days - configurable
			rr.lastupdate >= <include refid="lastUpdatedDay"/> 
			OR nn.lastupdate >= <include refid="lastUpdatedDay"/>
			OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
			OR nn.AzureLastupdate >= <include refid="lastUpdatedDay"/>
		) AND NOT EXISTS (
			SELECT 1
			FROM <include refid="azureDB"/>.[dbo].[containeritineraries] zz (NOLOCK)
			WHERE zz.containerid IS NOT NULL AND nn.azureid IS NOT NULL AND zz.containerid = nn.azureid
			AND zz.itineraryid IS NOT NULL AND rr.azureid IS NOT NULL AND zz.itineraryid = rr.azureid
		)

	</select> 
	<select id="findMasterBillItineraries" resultType="MasterBillItineraries">
	
		SELECT DISTINCT
			rr.azureid AS itineraryid,
			mm.azureid AS masterbillofladingid,
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate
			FROM <include refid="dbName"/> ss (NOLOCK)
			INNER JOIN t_imp_hawb ihb
				ON ss.dbname = #{db}
				AND ss.sysname = #{sysname}
				AND ss.codetype = 'SHIPMENTS'
				AND ss.code = ihb.hawbno
				AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
			INNER JOIN t_imp_mawb imb ON ihb.mawbno = imb.mawbno
			INNER JOIN <include refid="dbName"/> rr (NOLOCK)
				ON ss.dbname = rr.dbname
				AND ss.sysname = rr.sysname
		        AND rr.codetype = 'ITINERARIES'
				AND (rr.seq = 1 AND imb.flno = rr.code)
				AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
			INNER JOIN <include refid="dbName"/> mm (NOLOCK)
				ON ss.dbname = mm.dbname
				AND ss.sysname = mm.sysname
				AND mm.codetype = 'MASTERBILLS'
				AND ihb.mawbno = mm.code
				AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
		WHERE 1=1
		AND (
			--Retrieve data for 1 or 2 days - configurable
			rr.lastupdate >= <include refid="lastUpdatedDay"/> 
			OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
			OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
			OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
		) AND NOT EXISTS (
			SELECT 1
			FROM <include refid="azureDB"/>.[dbo].[masterbillitineraries] zz (NOLOCK)
			WHERE zz.masterbillofladingid IS NOT NULL AND mm.azureid IS NOT NULL AND zz.masterbillofladingid = mm.azureid
			AND zz.itineraryid IS NOT NULL AND rr.azureid IS NOT NULL AND zz.itineraryid = rr.azureid
		)
    </select>
    
    <select id="findDeleteBillOfLadingConsignments" resultType="BillOfLadingConsignments">
		SELECT DISTINCT
			d.consignmentid AS consignmentid,
			d.billofladingid AS billofladingid,
			d.shipmentid AS shipmentid,
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23),GETDATE(),126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23),GETDATE(),126) AS updateddate
		FROM
		(
			SELECT DISTINCT
				   cc.azureid AS consignmentid,
				   ii.azureid AS billofladingid,
				   ss.azureid AS shipmentid
			FROM <include refid="azureDB"/>.[dbo].[billofladingconsignments] mstr (NOLOCK)
				INNER REMOTE JOIN <include refid="dbName"/> ii (NOLOCK)
					ON ii.dbname = #{db}
					AND ii.sysname = #{sysname}
					AND ii.codetype = 'BILLOFLADINGS'
					AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'
					AND mstr.billofladingid = ii.azureid
				INNER REMOTE JOIN <include refid="dbName"/> cc (NOLOCK)
					ON ii.dbname = cc.dbname
				    AND ii.sysname = cc.sysname
					AND cc.codetype = 'CONSIGNMENTS'
					AND cc.isetltoazure IS NOT NULL AND cc.isetltoazure = 'Y'
					AND cc.code2 IN <include refid="companyCodelist"/> --Origin Consignment
					AND mstr.consignmentid = cc.azureid
				INNER REMOTE JOIN <include refid="dbName"/> ss (NOLOCK)
					ON ii.dbname = ss.dbname
				    AND ii.sysname = ss.sysname
					AND ss.codetype = 'SHIPMENTS'
					AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
					AND mstr.ShipmentId = ss.azureid
			WHERE 1=1
			AND (
				--Retrieve data for 1 or 2 days - configurable
				ii.lastupdate >= <include refid="lastUpdatedDay"/> 
				OR cc.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ss.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR cc.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR ss.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			) 
			EXCEPT
			SELECT DISTINCT
				    cc.azureid AS consignmentid,
				    ii.azureid AS billofladingid,
				    ss.azureid AS shipmentid
				    FROM <include refid="dbName"/> AS ii(NOLOCK)
					INNER JOIN t_imp_hawb ihb
						ON ii.dbname = #{db}
						AND ii.sysname = #{sysname}
						AND ii.codetype = 'BILLOFLADINGS'
						AND ii.code = ihb.hawbno
						AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'
					INNER JOIN <include refid="dbName"/> cc (NOLOCK)
						ON ii.dbname = cc.dbname
						AND ii.sysname = cc.sysname
			            AND cc.codetype = 'CONSIGNMENTS'
			            AND ihb.hawbno = cc.code
						AND cc.code2 IN <include refid="companyCodelist"/>
						AND cc.isetltoazure IS NOT NULL AND cc.isetltoazure = 'Y'
					INNER JOIN <include refid="dbName"/> ss (NOLOCK)
						ON ii.dbname = ss.dbname
						AND ii.sysname = ss.sysname
						AND ss.codetype = 'SHIPMENTS'
						AND  ihb.hawbno = ss.code
						AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
				WHERE 1=1
				AND (
				--Retrieve data for 1 or 2 days - configurable
				ii.lastupdate >= <include refid="lastUpdatedDay"/> 
				OR cc.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ss.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR cc.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR ss.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				)
			) AS d
	
	</select> 
	<select id="findDeleteBillOfLadingItineraries" resultType="BillOfLadingItineraries">
		
		SELECT DISTINCT
			d.itineraryid AS itineraryid,
			d.billofladingid AS billofladingid,
			d.masterbillofladingid AS masterbillofladingid,
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate
		FROM
		(
			SELECT DISTINCT
				   rr.azureid AS itineraryid,
				   ii.azureid AS billofladingid,
				   mm.azureid AS masterbillofladingid
			FROM <include refid="azureDB"/>.[dbo].[billofladingitineraries] AS mstr (NOLOCK)
				INNER REMOTE JOIN <include refid="dbName"/> AS ii (NOLOCK)
					ON ii.dbname = #{db}
					AND ii.sysname = #{sysname}
					AND ii.codetype = 'BILLOFLADINGS'
					AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'
					AND mstr.billofladingid = ii.azureid
				INNER REMOTE JOIN <include refid="dbName"/> AS rr (NOLOCK)
					ON ii.dbname = rr.dbname
				    AND ii.sysname = rr.sysname
					AND rr.codetype = 'ITINERARIES'
					AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
					AND mstr.ItineraryId = rr.azureid
				LEFT JOIN <include refid="dbName"/> AS mm (NOLOCK)
					ON ii.dbname = mm.dbname
				    AND ii.sysname = mm.sysname
					AND mm.codetype = 'MASTERBILLS'
					AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
					AND mstr.MasterBillOfLadingId = mm.azureid
			WHERE 1=1
			AND (
				--Retrieve data for 1 or 2 days - configurable
				ii.lastupdate >= <include refid="lastUpdatedDay"/> 
				OR rr.lastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.id is null
			) 
			EXCEPT
			SELECT DISTINCT
				    rr.azureid AS itineraryid,
				    ii.azureid AS billofladingid,
				    mm.azureid AS masterbillofladingid
				    FROM <include refid="dbName"/> AS ii (NOLOCK)
					INNER JOIN t_imp_hawb ihb
						ON ii.dbname = #{db}
						AND ii.sysname = #{sysname}
						AND ii.codetype = 'BILLOFLADINGS'
						AND ii.code = ihb.hawbno
						AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'		
					INNER JOIN t_imp_mawb imb ON ihb.mawbno = imb.mawbno
					INNER JOIN <include refid="dbName"/> AS rr (NOLOCK)
						ON ii.dbname = rr.dbname
						AND ii.sysname = rr.sysname
					    AND rr.codetype = 'ITINERARIES'
					    AND (rr.seq = 1 AND imb.flno = rr.code)
					    AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
					LEFT JOIN <include refid="dbName"/> AS mm (NOLOCK)
						ON ii.dbname = mm.dbname
						AND ii.sysname = mm.sysname
						AND mm.codetype = 'MASTERBILLS'
						AND ihb.mawbno = mm.code
						AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
				WHERE (
				--Retrieve data for 1 or 2 days - configurable
				ii.lastupdate >= <include refid="lastUpdatedDay"/>
				OR rr.lastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.id IS NULL
				)
			) AS d
	</select> 
	<select id="findDeleteShipmentBillOfLadings" resultType="ShipmentBillOfLadings">
		SELECT DISTINCT
			d.shipmentid AS shipmentid,
			d.billofladingid AS billofladingid,
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate
		FROM
		(
			SELECT DISTINCT
				   ss.azureid AS shipmentid,
				   ii.azureid AS billofladingid
			FROM <include refid="azureDB"/>.[dbo].[shipmentbillofladings] mstr (NOLOCK)
			INNER REMOTE JOIN <include refid="dbName"/> ss (NOLOCK)
				ON ss.dbname = #{db}
				AND ss.sysname = #{sysname}
				AND ss.codetype = 'SHIPMENTS'
				AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
				AND mstr.ShipmentId = ss.azureid
			INNER REMOTE JOIN <include refid="dbName"/> ii (NOLOCK)
				ON ss.dbname = ii.dbname
				AND ss.sysname = ii.sysname
				AND ii.codetype = 'BILLOFLADINGS'
				AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'
				AND mstr.billofladingid = ii.azureid
		WHERE 1=1
		AND (
			--Retrieve data for 1 or 2 days - configurable
			ss.lastupdate >= <include refid="lastUpdatedDay"/>
			OR ii.lastupdate >= <include refid="lastUpdatedDay"/>
			OR ss.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/>
		) 
		EXCEPT 
			SELECT DISTINCT
				   ss.azureid AS shipmentid,
				   ii.azureid AS billofladingid
				FROM <include refid="dbName"/> ss (NOLOCK)
				INNER JOIN t_imp_hawb ihb
					ON ss.dbname = #{db}
					AND ss.sysname = #{sysname}
					AND ss.codetype = 'SHIPMENTS'
					AND ss.code = ihb.hawbno
					AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
				INNER JOIN <include refid="dbName"/> ii (NOLOCK)
					ON ss.dbname = ii.dbname
					AND ss.sysname = ii.sysname
					AND ii.codetype = 'BILLOFLADINGS'
					AND ihb.hawbno = ii.code
					AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'
			WHERE(
				--Retrieve data for 1 or 2 days - configurable
				ss.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ii.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ss.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			)
		) AS d
		
	</select> 
	<select id="findDeleteBillOfLadingShipmentLoads" resultType="BillOfLadingShipmentLoads">
		SELECT DISTINCT
			d.billofladingid AS billofladingid,
			   d.shipmentloadid AS shipmentloadid,
			   'FreightSystem' AS createdby,
			   CONVERT(VARCHAR(23),GETDATE(),126) AS createddate,
			   'FreightSystem' AS updatedby,
			   CONVERT(VARCHAR(23),GETDATE(),126) AS updateddate,
			   d.containerid AS containerid,
			   d.consolidationid AS consolidationid,
			   d.masterbillofladingid AS masterbillofladingid,
			   d.isfcl AS isfcl
		FROM
		(
			SELECT DISTINCT
				   ii.azureid AS billofladingid,
				   sl.azureid AS shipmentloadid,
				   nn.azureid AS containerid,
				   oo.azureid AS consolidationid,
				   mm.azureid AS masterbillofladingid,
				   0  AS isfcl
			FROM <include refid="azureDB"/>.[dbo].[billofladingshipmentloads] mstr (NOLOCK)
				INNER REMOTE JOIN <include refid="dbName"/> ii (NOLOCK)
					ON ii.dbname = #{db}
					AND ii.sysname = #{sysname}
					AND ii.codetype = 'BILLOFLADINGS'
					AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'
					AND mstr.billofladingid = ii.azureid
				INNER REMOTE JOIN <include refid="dbName"/> sl (NOLOCK)
					ON ii.dbname = sl.dbname
				    AND ii.sysname = sl.sysname
					AND sl.codetype = 'SHIPMENTLOADS'
					AND sl.isetltoazure IS NOT NULL AND sl.isetltoazure = 'Y'
					AND mstr.ShipmentLoadId = sl.azureid
				INNER JOIN t_imp_hawb ihb ON sl.code = ihb.hawbno
				LEFT JOIN <include refid="dbName"/> nn (NOLOCK)
					ON ii.dbname = nn.dbname
				    AND ii.sysname = nn.sysname
					AND nn.codetype = 'CONTAINERS'
					AND nn.isetltoazure IS NOT NULL AND nn.isetltoazure = 'Y'
					AND mstr.ContainerId = nn.azureid
				LEFT JOIN <include refid="dbName"/> oo (NOLOCK)
					ON ii.dbname = oo.dbname
				    AND ii.sysname = oo.sysname
					AND oo.codetype = 'CONSOLIDATIONS'
					AND oo.isetltoazure IS NOT NULL AND oo.isetltoazure = 'Y'
					AND mstr.ConsolidationId = oo.azureid
				LEFT JOIN <include refid="dbName"/> mm (NOLOCK)
					ON ii.dbname = mm.dbname
				    AND ii.sysname = mm.sysname
					AND mm.codetype = 'MASTERBILLS'
					AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
					AND mstr.MasterBillOfLadingId = mm.azureid
			WHERE 1=1
			AND (
				--Retrieve data for 1 or 2 days - configurable
				ii.lastupdate >= <include refid="lastUpdatedDay"/> 
				OR sl.lastupdate >= <include refid="lastUpdatedDay"/>
				OR nn.lastupdate >= <include refid="lastUpdatedDay"/>
				OR oo.lastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR sl.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR nn.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR oo.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR nn.id is null
				OR oo.id is null
				OR mm.id is null
			) 
			EXCEPT			
			SELECT DISTINCT
			   ii.azureid AS billofladingid,
			   sl.azureid AS shipmentloadid,
			   nn.azureid AS containerid,
			   oo.azureid AS consolidationid,
			   mm.azureid AS masterbillofladingid,
			   0  AS isfcl
			   FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN t_imp_hawb ihb
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'BILLOFLADINGS'
				AND ii.code = ihb.hawbno
				AND ii.isetltoazure IS NOT NULL AND ii.isetltoazure = 'Y'	
			INNER JOIN <include refid="dbName"/> sl (NOLOCK)
				ON ii.dbname = sl.dbname
				AND ii.sysname = sl.sysname
				AND sl.codetype = 'SHIPMENTLOADS'
				AND ihb.hawbno = sl.code
				AND sl.isetltoazure IS NOT NULL AND sl.isetltoazure = 'Y'
			LEFT JOIN <include refid="dbName"/> nn (NOLOCK)
				ON ii.dbname = nn.dbname
				AND ii.sysname = nn.sysname
				AND nn.codetype = 'CONTAINERS'
				AND ihb.jobno = nn.code
				AND nn.isetltoazure IS NOT NULL AND nn.isetltoazure = 'Y'
			LEFT JOIN <include refid="dbName"/> oo (NOLOCK)
				ON 1=1
				AND ii.dbname = oo.dbname
				AND ii.sysname = oo.sysname
				AND oo.codetype = 'CONSOLIDATIONS'
				AND ihb.jobno = nn.code
				AND oo.isetltoazure IS NOT NULL AND oo.isetltoazure = 'Y'
			LEFT JOIN <include refid="dbName"/> mm (NOLOCK)
				ON ii.dbname = mm.dbname
				AND ii.sysname = mm.sysname
				AND mm.codetype = 'MASTERBILLS'
				AND ihb.mawbno = mm.code
				AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
			WHERE(
				--Retrieve data for 1 or 2 days - configurable
				ii.lastupdate >= <include refid="lastUpdatedDay"/>
				OR sl.lastupdate >= <include refid="lastUpdatedDay"/>
				OR nn.lastupdate >= <include refid="lastUpdatedDay"/>
				OR oo.lastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ii.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR sl.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR nn.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR oo.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR nn.id is null
				OR oo.id is null
				OR mm.id is null
			)
		) AS d

	</select> 
	<select id="findDeleteConsignmentItineraries" resultType="ConsignmentItineraries">
		
		SELECT DISTINCT
			   d.consignmentid AS consignmentid,
			   d.itineraryid AS itineraryid,
			   'FreightSystem' AS createdby,
			   CONVERT(VARCHAR(23),GETDATE(),126) AS createddate,
			   'FreightSystem' AS updatedby,
			   CONVERT(VARCHAR(23),GETDATE(),126) AS updateddate,
			   d.shipmentid AS shipmentid,
			   d.masterbillid AS masterbillid,
			   d.sequence AS sequence
		FROM
		(
			SELECT DISTINCT
				   cc.azureid AS consignmentid,
				   rr.azureid AS itineraryid,
				   ss.azureid AS shipmentid,
				   mm.azureid AS masterbillid,
				   ISNULL(rr.seq,1) AS sequence
			FROM <include refid="azureDB"/>.[dbo].[consignmentitineraries] mstr (NOLOCK)
				INNER REMOTE JOIN <include refid="dbName"/> cc (NOLOCK)
					ON cc.dbname = #{db}
					AND cc.sysname = #{sysname}
					AND cc.codetype = 'CONSIGNMENTS'
					AND cc.isetltoazure IS NOT NULL AND cc.isetltoazure = 'Y'
					AND cc.code2 IN<include refid="companyCodelist"/> --Origin Consignment
					AND mstr.consignmentid = cc.azureid
				INNER REMOTE JOIN <include refid="dbName"/> rr (NOLOCK)
					ON cc.dbname = rr.dbname
				    AND cc.sysname = rr.sysname
					AND rr.codetype = 'ITINERARIES'
					AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
					AND mstr.ItineraryId = rr.azureid
				INNER REMOTE JOIN <include refid="dbName"/> ss (NOLOCK)
					ON cc.dbname = ss.dbname
				    AND cc.sysname = ss.sysname
					AND ss.codetype = 'SHIPMENTS'
					AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
					AND mstr.ShipmentId = ss.azureid
				LEFT JOIN <include refid="dbName"/> mm (NOLOCK)
					ON cc.dbname = mm.dbname
				    AND cc.sysname = mm.sysname
					AND mm.codetype = 'MASTERBILLS'
					AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
					AND mstr.MasterBillId = mm.azureid
			WHERE 1=1
			AND (
				--Retrieve data for 1 or 2 days - configurable
				cc.lastupdate >= <include refid="lastUpdatedDay"/> 
				OR rr.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ss.lastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
				OR cc.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR ss.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.id is null
			) 
			EXCEPT
			SELECT DISTINCT
				   cc.azureid AS consignmentid,
				   rr.azureid AS itineraryid,
				   ss.azureid AS shipmentid,
				   mm.azureid AS masterbillid,
				   CASE WHEN rr.Id IS NOT NULL THEN rr.seq ELSE 1 END AS sequence
			FROM <include refid="dbName"/> ss (NOLOCK)
			INNER JOIN t_imp_hawb ihb
				ON ss.dbname = #{db}
				AND ss.sysname = #{sysname}
				AND ss.codetype = 'SHIPMENTS'
				AND ss.code = ihb.hawbno
				AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
			INNER JOIN t_imp_mawb imb ON ihb.mawbno = imb.mawbno
			INNER JOIN <include refid="dbName"/> cc (NOLOCK)
				ON ss.dbname = cc.dbname
				AND ss.sysname = cc.sysname
	            AND cc.codetype = 'CONSIGNMENTS'
	            AND ihb.hawbno = cc.code
				AND cc.code2 IN <include refid="companyCodelist"/>
				AND cc.isetltoazure IS NOT NULL AND cc.isetltoazure = 'Y'
			INNER JOIN <include refid="dbName"/> rr (NOLOCK)
				ON ss.dbname = rr.dbname
				AND ss.sysname = rr.sysname
				AND rr.codetype = 'ITINERARIES'
				AND (rr.seq = 1 AND imb.flno = rr.code)
				AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
			LEFT JOIN <include refid="dbName"/> mm (NOLOCK)
				ON ss.dbname = mm.dbname
				AND ss.sysname = mm.sysname
				AND mm.codetype = 'MASTERBILLS'
				AND ihb.mawbno = mm.code
				AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
		WHERE (
				--Retrieve data for 1 or 2 days - configurable
				cc.lastupdate >= <include refid="lastUpdatedDay"/>
				OR rr.lastupdate >= <include refid="lastUpdatedDay"/>
				OR ss.lastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
				OR cc.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR ss.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.id is null
			)
		) AS d

	</select> 
	<select id="findDeleteContainerItineraries" resultType="ContainerItineraries">
		
		SELECT DISTINCT
			   d.itineraryid AS itineraryid,
			   d.containerid AS containerid,
			   'FreightSystem' AS createdby,
			   CONVERT(VARCHAR(23),GETDATE(),126) AS createddate,
			   'FreightSystem' AS updatedby,
			   CONVERT(VARCHAR(23),GETDATE(),126) AS updateddate
		FROM
		(
			SELECT DISTINCT
				   rr.azureid AS itineraryid,
				   nn.azureid AS containerid
			FROM <include refid="azureDB"/>.[dbo].[containeritineraries] mstr (NOLOCK)
				INNER REMOTE JOIN <include refid="dbName"/> rr (NOLOCK)
					ON rr.dbname = #{db}
					AND rr.sysname = #{sysname}
					AND rr.codetype = 'ITINERARIES'
					AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
					AND mstr.ItineraryId = rr.azureid
				INNER REMOTE JOIN <include refid="dbName"/> nn (NOLOCK)
					ON rr.dbname = nn.dbname
				    AND rr.sysname = nn.sysname
					AND nn.codetype = 'CONTAINERS'
					AND nn.isetltoazure IS NOT NULL AND nn.isetltoazure = 'Y'
					AND mstr.ContainerId = nn.azureid
			WHERE 1=1
			AND (
				--Retrieve data for 1 or 2 days - configurable
				rr.lastupdate >= <include refid="lastUpdatedDay"/> 
				OR nn.lastupdate >= <include refid="lastUpdatedDay"/>
				OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR nn.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			) 
			EXCEPT
			SELECT DISTINCT
				   rr.azureid AS itineraryid,
				   nn.azureid AS containerid
				   FROM <include refid="dbName"/> ss (NOLOCK)
				   INNER JOIN t_imp_hawb ihb
						ON ss.dbname = #{db}
						AND ss.sysname = #{sysname}
						AND ss.codetype = 'SHIPMENTS'
						AND ss.code = ihb.hawbno
						AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
				   INNER JOIN t_imp_mawb imb ON ihb.mawbno = imb.mawbno
				   INNER JOIN <include refid="dbName"/> rr (NOLOCK)
						ON ss.dbname = rr.dbname
						AND ss.sysname = rr.sysname
				   		AND rr.codetype = 'ITINERARIES'
				   		AND (rr.seq = 1 AND imb.flno = rr.code)
				   		AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
				   INNER JOIN <include refid="dbName"/> nn (NOLOCK)
						ON ss.dbname = nn.dbname
						AND ss.sysname = nn.sysname
						AND nn.codetype = 'CONTAINERS'
						AND nn.code = ihb.jobno
						AND nn.isetltoazure IS NOT NULL AND nn.isetltoazure = 'Y'
			WHERE(
				--Retrieve data for 1 or 2 days - configurable
				rr.lastupdate >= <include refid="lastUpdatedDay"/>
				OR nn.lastupdate >= <include refid="lastUpdatedDay"/>
				OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR nn.AzureLastupdate >= <include refid="lastUpdatedDay"/>
				)
		) AS d

	</select> 
	<select id="findDeleteMasterBillItineraries" resultType="MasterBillItineraries">
		SELECT DISTINCT
			   d.itineraryid AS itineraryid,
			   d.masterbillofladingid AS masterbillofladingid,
			   'FreightSystem' AS createdby,
			   CONVERT(VARCHAR(23),GETDATE(),126) AS createddate,
			   'FreightSystem' AS updatedby,
			   CONVERT(VARCHAR(23),GETDATE(),126) AS updateddate
		FROM
		(
			SELECT DISTINCT
				   rr.azureid AS itineraryid,
				   mm.azureid AS masterbillofladingid
			FROM <include refid="azureDB"/>.[dbo].[masterbillitineraries] mstr (NOLOCK)
				INNER REMOTE JOIN <include refid="dbName"/> rr (NOLOCK)
					ON rr.dbname = #{db}
					AND rr.sysname = #{sysname}
					AND rr.codetype = 'ITINERARIES'
					AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
					AND mstr.ItineraryId = rr.azureid
				INNER REMOTE JOIN <include refid="dbName"/> mm (NOLOCK)
					ON rr.dbname = mm.dbname
				    AND rr.sysname = mm.sysname
					AND mm.codetype = 'MASTERBILLS'
					AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
					AND mstr.MasterBillOfLadingId = mm.azureid
			WHERE 1=1
			AND (
				--Retrieve data for 1 or 2 days - configurable
				rr.lastupdate >= <include refid="lastUpdatedDay"/> 
				OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
				OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			) 
			EXCEPT
			SELECT DISTINCT
				   rr.azureid AS itineraryid,
				   mm.azureid AS masterbillofladingid
			FROM <include refid="dbName"/> ss (NOLOCK)
			INNER JOIN t_imp_hawb ihb
				ON ss.dbname = #{db}
				AND ss.sysname = #{sysname}
				AND ss.codetype = 'SHIPMENTS'
				AND ss.code = ihb.hawbno
				AND ss.isetltoazure IS NOT NULL AND ss.isetltoazure = 'Y'
			INNER JOIN t_imp_mawb imb ON ihb.mawbno = imb.mawbno
			INNER JOIN <include refid="dbName"/> rr (NOLOCK)
				ON ss.dbname = rr.dbname
				AND ss.sysname = rr.sysname
				AND rr.codetype = 'ITINERARIES'
				AND (rr.seq = 1 AND imb.flno = rr.code)
				AND rr.isetltoazure IS NOT NULL AND rr.isetltoazure = 'Y'
			INNER JOIN <include refid="dbName"/> mm (NOLOCK)
				ON ss.dbname = mm.dbname
				AND ss.sysname = mm.sysname
				AND mm.codetype = 'MASTERBILLS'
				AND ihb.mawbno = mm.code
				AND mm.isetltoazure IS NOT NULL AND mm.isetltoazure = 'Y'
			WHERE(
				--Retrieve data for 1 or 2 days - configurable
				rr.lastupdate >= <include refid="lastUpdatedDay"/>
				OR mm.lastupdate >= <include refid="lastUpdatedDay"/>
				OR rr.AzureLastupdate >= <include refid="lastUpdatedDay"/> 
				OR mm.AzureLastupdate >= <include refid="lastUpdatedDay"/>
			)
		) AS d
	</select> 
	
	<select id="findActivities" resultType="Activities">
		SELECT DISTINCT
			eid.id AS [id],
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
			eid.code AS activitycode,
			ss.azureid AS shipmentid,
			NULL AS containerid,
			NULL AS consignmentid,
			eid.code2 AS activitytype,
			'Shipment actual departure from origin' AS activitydescription,
			CONVERT(VARCHAR(23), imb.fldate, 126) AS activitydate,
			ihb.airport AS location,
			'' AS remark,
			NULL AS resolved,
			'' AS resolution,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS resolutiondate
		FROM <include refid="dbName"/> eid (NOLOCK)
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON eid.dbname = #{db}
				AND eid.sysname = #{sysname}
				AND eid.dbname = ss.dbname
				AND eid.sysname = ss.sysname
				AND eid.codetype = 'ACTIVITIES'
				AND ss.codetype = 'SHIPMENTS'
				AND eid.code = '7003'
				AND eid.code2 = 'SM'
				AND eid.seq = ss.id  --ediSONETDId.SHIPMENTS.id
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			INNER JOIN t_imp_hawb ihb ON ss.code = ihb.hawbno	
			INNER join t_imp_mawb imb (nolock) on ihb.mawbno=imb.mawbno
			LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap mapp (NOLOCK)
				ON mapp.EDIName = 'SHIPMENT_PORTAL'
				AND mapp.CodeType = 'ETLPARAMETER'
				AND mapp.Status = 'Y'
				AND mapp.OurCode = 'SYSNAME_ACTIVITIES_7003_SKIP'
				AND mapp.PartnerCode = eid.sysname
		WHERE mapp.Status IS NULL
			AND imb.fldate IS NOT NULL 
			AND imb.fldate  <![CDATA[ < ]]>= GETDATE()
			AND eid.id IN <include refid="list"/>
		UNION
		SELECT DISTINCT
			eid.id AS [id],
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
			eid.code AS activitycode,
			ss.azureid AS shipmentid,
			NULL AS containerid,
			NULL AS consignmentid,
			eid.code2 AS activitytype,
			'Shipment actual arrival at discharge' AS activitydescription,
			CONVERT(VARCHAR(23), ihb.arrival_date, 126) AS activitydate,
			ihb.airport1 AS location,
			'' AS remark,
			NULL AS resolved,
			'' AS resolution,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS resolutiondate
		FROM <include refid="dbName"/> eid (NOLOCK)
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON eid.dbname = #{db}
				AND eid.sysname = #{sysname}
				AND eid.dbname = ss.dbname
				AND eid.sysname = ss.sysname
				AND eid.codetype = 'ACTIVITIES'
				AND ss.codetype = 'SHIPMENTS'
				AND eid.code = '7004'
				AND eid.code2 = 'SM'
				AND eid.seq = ss.id  --ediSONETDId.SHIPMENTS.id
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			INNER JOIN t_imp_hawb ihb ON ss.code = ihb.hawbno	
			LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap mapp (NOLOCK)
				ON mapp.EDIName = 'SHIPMENT_PORTAL'
				AND mapp.CodeType = 'ETLPARAMETER'
				AND mapp.Status = 'Y'
				AND mapp.OurCode = 'SYSNAME_ACTIVITIES_7004_SKIP'
				AND mapp.PartnerCode = eid.sysname
		WHERE mapp.Status IS NULL
			AND ihb.arrival_date IS NOT NULL 
			AND ihb.arrival_date  <![CDATA[ < ]]>= GETDATE()
			AND eid.id IN <include refid="list"/>
		UNION	
		SELECT DISTINCT
			eid.id AS [id],
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
			eid.code AS activitycode,
			ss.azureid AS shipmentid,
			NULL AS containerid,
			NULL AS consignmentid,
			eid.code2 AS activitytype,
			'Shipment handover to consignee' AS activitydescription,
			CONVERT(VARCHAR(23), ihb.pod, 126) AS activitydate,
			ihb.airport1 AS location,
			'' AS remark,
			NULL AS resolved,
			'' AS resolution,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS resolutiondate
		FROM <include refid="dbName"/> eid (NOLOCK)
			INNER JOIN <include refid="dbName"/> ss (NOLOCK)
				ON eid.dbname = #{db}
				AND eid.sysname = #{sysname}
				AND eid.dbname = ss.dbname
				AND eid.sysname = ss.sysname
				AND eid.codetype = 'ACTIVITIES'
				AND ss.codetype = 'SHIPMENTS'
				AND eid.code = '2054'
				AND eid.code2 = 'SM'
				AND eid.seq = ss.id  --ediSONETDId.SHIPMENTS.id
				AND ISNULL(ss.isetltoazure, '') = 'Y'
			INNER JOIN t_imp_hawb ihb ON ss.code = ihb.hawbno	
			LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap mapp (NOLOCK)
				ON mapp.EDIName = 'SHIPMENT_PORTAL'
				AND mapp.CodeType = 'ETLPARAMETER'
				AND mapp.Status = 'Y'
				AND mapp.OurCode = 'SYSNAME_ACTIVITIES_2054_SKIP'
				AND mapp.PartnerCode = eid.sysname
		WHERE mapp.Status IS NULL
			AND ihb.pod IS NOT NULL 
			AND ihb.pod  <![CDATA[ < ]]>= GETDATE()
			AND eid.id IN <include refid="list"/>
	
	</select>
	<select id="findPurchaseOrders" resultType="PurchaseOrders">
		SELECT DISTINCT
			ii.id AS [id],
			'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
		    RTRIM(ISNULL(cvpo.companycode,'')) + '|' + RTRIM(ISNULL(cvpo.pono,'')) AS POKey,
			RTRIM(ISNULL(cvpo.companycode,'')) + '|' + RTRIM(ISNULL(cvpo.pono,'')) + '|' + RTRIM(ISNULL(cvpo.POSeq,'')) + '|' + RTRIM(ISNULL(cvpo.ItemNo,'')) AS POLineKey,
		    RTRIM(cvpo.PONo) AS PONumber,
		    CASE WHEN ISNULL(cvpo.CustomerPO,'') = '' THEN CASE WHEN (ISNULL(ISNULL(portofloadmap.PartnerCode, cvpo.PortOfLoad),'') = ISNULL(ISNULL(portofdischargemap.PartnerCode, cvpo.PortOfDischarge),'') OR dcmap.Status = 'Y') THEN 'BLANKET' ELSE 'BULK' END ELSE 'ALLOCATED' END AS POType,
		    CASE WHEN ISNULL(cvpo.CustomerPO,'') = '' THEN NULL ELSE RTRIM(ISNULL(cvpo.companycode,'')) + '|' + RTRIM(ISNULL(cvpo.CustomerPO,'')) END AS BlanketPOKey,
			CONVERT(VARCHAR(23), cvpo.OrderDate, 126) AS POIssueDate,
			countActiveItems.noi AS NumberOfLineItems,
			RTRIM(ISNULL(cvpo.PaymentTerm, '')) AS Incoterm,
			'' AS CarrierCode,
			'' AS GatewayCode,
			CASE WHEN RTRIM(ISNULL(cvpo.PortOfLoad, '')) <![CDATA[ <> ]]> '' THEN RIGHT(RTRIM(ISNULL(portofloadmap.PartnerCode, cvpo.PortOfLoad)),2) + LEFT(RTRIM(ISNULL(portofloadmap.PartnerCode, cvpo.PortOfLoad)),3) ELSE '' END AS ShipFrom,
			CASE WHEN RTRIM(ISNULL(cvpo.DestCode, '')) <![CDATA[ <> ]]> '' THEN RIGHT(RTRIM(ISNULL(destcodemap.PartnerCode, cvpo.DestCode)),2) + LEFT(RTRIM(ISNULL(destcodemap.PartnerCode, cvpo.DestCode)),3) 
				WHEN RTRIM(ISNULL(cvpo.PortOfDischarge, '')) <![CDATA[ <> ]]> '' THEN RIGHT(RTRIM(ISNULL(portofdischargemap.PartnerCode, cvpo.PortOfDischarge)),2) + LEFT(RTRIM(ISNULL(portofdischargemap.PartnerCode, cvpo.PortOfDischarge)),3) ELSE '' END AS ShipTo,
			RTRIM(ISNULL(cvpo.Currency, '')) AS PaymentCurrencyCode,
			RTRIM(ISNULL(cvpo.PaymentTerm, '')) AS PaymentTerms,
			CASE ISNULL(cvpo.ShipMode, '') WHEN 'SEA' THEN 'Sea' WHEN 'AIR' THEN 'Air' ELSE RTRIM(ISNULL(cvpo.ShipMode, '')) END AS ModeOfTransport,
			NULL AS EarliestShipDate,
			CONVERT(VARCHAR(23), cvpo.ExpShipDate, 126) AS ExpectedShipDate,
			CONVERT(VARCHAR(23), cvpo.ExpDelDate, 126) AS ExpectedDeliveryDate,
			RTRIM(ISNULL(cvpo.ContainerType, '')) AS PORemark,
			CASE WHEN RTRIM(cvpo.ContainerType) = 'CFS' THEN 'LCL'
				WHEN RTRIM(cvpo.ContainerType) = '20RE' THEN '20RF'
				WHEN RTRIM(cvpo.ContainerType) = '40RE' THEN '40RF'
				ELSE RTRIM(ISNULL(cvpo.ContainerType, '')) END AS ContainerType,
			'' AS Season,
			CASE WHEN countActiveItems.noi = 0 THEN 0 ELSE 1 END AS Status,
			RTRIM(cvpo.ItemNo) AS ProductCode,
			cvpo.OrderQty AS OrderedUnitQty,
			'Each' AS UnitUOM,
			ISNULL(cvpo.UnitPrice, 0) AS UnitPrice,
			cvpo.POSeq AS LineOrder,
			RTRIM(ISNULL(cvpo.Currency, '')) AS CurrencyCode,
			'' AS HSCode,
			'' AS Commodity,
			RTRIM(ISNULL(cvpo.DCCode, '')) AS ReferenceNumber1,
			RTRIM(ISNULL(cvpo.SKU, '')) AS ReferenceNumber2,
			RTRIM(ISNULL(cvpo.ItemDesc, '')) AS DescriptionOfGoods,
			RTRIM(ISNULL(polcity.countrycode, '')) AS CountryCodeOfOrigin,
			CONVERT(VARCHAR(23), cvpo.ExWorkDate, 126) AS CargoReadyDate,
			cvpo.ItemRemarks AS ProductRemark,
			'Carton' AS PackageUOM
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN <include refid="cvsDB"/>.dbo.CompanyValidPO cvpo (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'PURCHASEORDERS'
				AND ii.code = cvpo.PONo
				AND ii.code2 = cvpo.DestCode
				AND ii.code3 = RTRIM(ISNULL(cvpo.companycode,'')) + '~' + RTRIM(ISNULL(cvpo.companytype,'')) + '~' + RTRIM(ISNULL(cvpo.shipmentno,''))
			CROSS APPLY (
				SELECT COUNT(*) noi
				FROM <include refid="cvsDB"/>.dbo.CompanyValidPO poi (NOLOCK)
				WHERE cvpo.PONo = poi.PONo
				AND cvpo.DestCode = poi.DestCode
				AND cvpo.companycode = poi.companycode
				AND cvpo.companytype = poi.companytype
				AND cvpo.shipmentno = poi.shipmentno
				AND poi.Status = 'O'
			) countActiveItems
			CROSS APPLY (
				SELECT COUNT(*) noi
				FROM <include refid="cvsDB"/>.dbo.CompanyValidPO poi (NOLOCK)
				WHERE cvpo.PONo = poi.PONo
				AND cvpo.DestCode = poi.DestCode
				AND cvpo.companycode = poi.companycode
				AND cvpo.companytype = poi.companytype
				AND cvpo.shipmentno = poi.shipmentno
			) countAllItems
			LEFT JOIN <include refid="cvsDB"/>.dbo.city polcity (NOLOCK)
				ON cvpo.PortOfLoad = polcity.citycode
			LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap portofloadmap (NOLOCK)
				ON portofloadmap.EDIName = 'SHIPMENT_PORTAL'
				AND portofloadmap.codetype = 'PORTCODE'
				AND portofloadmap.Status = 'Y'
				AND cvpo.PortOfLoad = portofloadmap.OurCode
			LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap portofdischargemap (NOLOCK)
				ON portofdischargemap.EDIName = 'SHIPMENT_PORTAL'
				AND portofdischargemap.codetype = 'PORTCODE'
				AND portofdischargemap.Status = 'Y'
				AND cvpo.PortOfDischarge = portofdischargemap.OurCode				
			LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap destcodemap (NOLOCK)
				ON destcodemap.EDIName = 'SHIPMENT_PORTAL'
				AND destcodemap.codetype = 'PORTCODE'
				AND destcodemap.Status = 'Y'
				AND cvpo.DestCode = destcodemap.OurCode				
			LEFT JOIN <include refid="cvsDB"/>.dbo.edicodemap dcmap (NOLOCK)
				ON dcmap.EDIName = 'SHIPMENT_PORTAL'
				AND dcmap.codetype = 'POBLANKETDCLIST'
				AND dcmap.Status = 'Y'
				AND ISNULL(cvpo.DCCode,'') = dcmap.OurCode
		WHERE (countActiveItems.noi = 0 OR (countActiveItems.noi > 0 AND cvpo.Status = 'O'))
			AND ii.id in <include refid="list"/>
	</select>
	<select id="findContacts" resultType="Contacts">
		SELECT DISTINCT
			ii.id AS [id],
			map.PartnerCode AS OrganizationRole,
			CASE WHEN map.OurCode IN ('P','C') THEN ISNULL(rel.code, aa.code)
				WHEN map.OurCode IN ('V','S') THEN ISNULL(rel.code, ISNULL(aa.code, '0'))
				WHEN map.OurCode IN ('O/A','A') THEN agt.code
				ELSE NULL END AS OrganizationCode,
			CASE WHEN map.OurCode IN ('V','S') THEN CASE WHEN ISNULL(rel.code, ISNULL(aa.code, '0')) = '0' THEN RTRIM(ISNULL(cvpo.SupplierName,'')) ELSE NULL END
				ELSE NULL END AS CompanyName
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN <include refid="cvsDB"/>.dbo.CompanyValidPO cvpo (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'PURCHASEORDERS'
				AND ii.code = cvpo.PONo
				AND ii.code2 = cvpo.DestCode
				AND ii.code3 = RTRIM(ISNULL(cvpo.companycode,'')) + '~' + RTRIM(ISNULL(cvpo.companytype,'')) + '~' + RTRIM(ISNULL(cvpo.shipmentno,''))
				AND cvpo.Status = 'O'
			CROSS APPLY (
				SELECT COUNT(*) noi
				FROM <include refid="cvsDB"/>.dbo.CompanyValidPO poi (NOLOCK)
				WHERE cvpo.PONo = poi.PONo
				AND cvpo.DestCode = poi.DestCode
				AND cvpo.companycode = poi.companycode
				AND cvpo.companytype = poi.companytype
				AND cvpo.shipmentno = poi.shipmentno
				AND poi.Status = 'O'
			) countActiveItems
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'POPARTYTYPE'
				AND map.Status = 'Y'
				AND map.OurCode IN ('P','C','V','S','O/A','A')
			LEFT JOIN <include refid="dbName"/> aa (NOLOCK)
				ON ii.dbname = aa.dbname
				AND aa.sysname = 'MASTERDATA'
				AND aa.codetype = 'ORGANIZATIONS'
				AND ((map.OurCode = 'P' AND aa.code IN (<include refid="PRINCIPAL_CODE"/>))
					OR (map.OurCode = 'C' AND cvpo.CompanyCode = aa.code)
					OR (map.OurCode IN ('V', 'S') AND cvpo.SupplierCode = aa.code))
		        AND aa.isetltoazure = 'Y'
			LEFT JOIN <include refid="dbName"/> rel (NOLOCK)
				ON ii.dbname = rel.dbname
				AND rel.sysname = 'MASTERDATA'
				AND rel.codetype = 'ORGREL'
				AND aa.AzureId = rel.AzureId
				AND rel.isetltoazure = 'Y'
			OUTER APPLY
			(
				SELECT TOP 1 agt.code AS code
				FROM <include refid="azureDB"/>.[dbo].[AgentAssignments] aa(NOLOCK)
				INNER JOIN <include refid="azureDB"/>.[dbo].[BuyerCompliances] bc(NOLOCK)
					ON aa.BuyerComplianceId = bc.id
					AND bc.STATUS = '1'
				CROSS APPLY
				(
					SELECT *
					FROM <include refid="azureMasterDB"/>.[dbo].[Organizations] o(NOLOCK)
					WHERE o.id = bc.OrganizationId
						AND o.EdisonCompanyCodeId IN (<include refid="PRINCIPAL_CODE"/>)
				) borg
				CROSS APPLY
				(
					SELECT *
					FROM <include refid="azureMasterDB"/>.[dbo].[Organizations] o(NOLOCK)
					WHERE o.id = aa.agentOrganizationID
				) agt
				OUTER APPLY
				(
					SELECT *
					FROM <include refid="azureMasterDB"/>.[dbo].[Countries] c(NOLOCK)
					WHERE c.id = aa.CountryId
				) cty
				WHERE ((map.OurCode = 'O/A' AND aa.agentType = 1 AND (cty.code = RIGHT(RTRIM(cvpo.PortOfLoad),2) OR cty.code IS NULL))
						OR (map.OurCode = 'A' AND aa.agentType = 2))
				ORDER BY cty.code DESC
			) agt
		WHERE countActiveItems.noi > 0
			AND ((map.OurCode IN ('P','C') AND (rel.code IS NOT NULL OR aa.code IS NOT NULL))
				OR (map.OurCode IN ('O/A','A') AND agt.code IS NOT NULL)
				OR map.OurCode IN ('V','S'))
			AND ii.id in <include refid="list"/>
		UNION
		SELECT DISTINCT
			ii.id AS [id],
			poc.OrganizationRole AS OrganizationRole,
			poc.OrganizationCode AS OrganizationCode,
			poc.CompanyName AS CompanyName
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN <include refid="cvsDB"/>.dbo.CompanyValidPO cvpo (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'PURCHASEORDERS'
				AND ii.code = cvpo.PONo
				AND ii.code2 = cvpo.DestCode
				AND ii.code3 = RTRIM(ISNULL(cvpo.companycode,'')) + '~' + RTRIM(ISNULL(cvpo.companytype,'')) + '~' + RTRIM(ISNULL(cvpo.shipmentno,''))
			CROSS APPLY (
				SELECT COUNT(*) noi
				FROM <include refid="cvsDB"/>.dbo.CompanyValidPO poi (NOLOCK)
				WHERE cvpo.PONo = poi.PONo
				AND cvpo.DestCode = poi.DestCode
				AND cvpo.companycode = poi.companycode
				AND cvpo.companytype = poi.companytype
				AND cvpo.shipmentno = poi.shipmentno
				AND poi.Status = 'O'
			) countActiveItems
			LEFT JOIN <include refid="azureDB"/>.[dbo].[PurchaseOrderContacts] poc (NOLOCK)
				ON ii.AzureId = poc.PurchaseOrderId
		WHERE countActiveItems.noi = 0
			AND ii.id in <include refid="list"/>
	</select>
	
	<select id="findPOFulfillment" resultType="POFulfillment">
	SELECT DISTINCT
		'' AS BookingReferenceNo,
		#{db} AS sysid,
		'' AS SONumber,
		'' AS BillOfLadingHeader,
		'' AS Warehouse,
		'' AS CargoClosingDate,
		'' AS ModeOfTransport,
		'' AS CarrierCode,
		'' AS VesselFlight,
		'' AS ETD,
		'' AS ETA
		FROM t_imp_mawb (NOLOCK)
		WHERE 1=2
	</select>
	<select id="findCruiseOrders" resultType="CruiseOrders">
	SELECT DISTINCT
			ii.id AS [id],
			'FreightSystem' AS createdby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
		    'FreightSystem' AS updatedby,
		    CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
			ISNULL(RTRIM(cs.POId),'') AS POId,
			RTRIM(cvpo.PONo) AS PONumber,
			CASE WHEN countActiveItems.noi = 0 THEN 0 ELSE 1 END AS POStatus,
			ISNULL(RTRIM(cs.POType),'') AS POType,
			CONVERT(VARCHAR(23), cvpo.OrderDate, 126) AS PODate,
			ISNULL(RTRIM(cvpo.ItemRemarks),'') AS POSubject,
			ISNULL(RTRIM(cs.POCause),'') AS POCause,
			ISNULL(RTRIM(cs.Priority),'') AS POPriority,
			ISNULL(RTRIM(cs.Ship),'') AS Ship,
			ISNULL(RTRIM(cs.Requestor),'') AS Requestor,
			CONVERT(VARCHAR(23), cs.ReqDate, 126) AS RequestDate,
			CONVERT(VARCHAR(23), cs.ReqApprovedDate, 126) AS RequestApprovedDate,
			ISNULL(RTRIM(cs.ReqPriority),'') AS RequestPriority,
			ISNULL(RTRIM(cs.ReqType),'') AS RequestType,
			ISNULL(RTRIM(cs.ReqType2),'') AS RequestType2,
			ISNULL(RTRIM(cs.ReqType3),'') AS RequestType3,
			ISNULL(RTRIM(cs.WithWO),'') AS WithWO,
			CONVERT(VARCHAR(23), cvpo.ExpShipDate, 126) AS EstimatedDeliveryDate,
			ISNULL(RTRIM(cs.Maker),'') AS Maker,
			ISNULL(RTRIM(cs.MaintenanceObj),'') AS MaintenanceObject,
			cs.Invoiced AS Invoiced,
			ISNULL(RTRIM(cs.FirstReceivingPoint),'') AS FirstReceivingPoint,
			ISNULL(RTRIM(cs.Department),'') AS Department,
			ISNULL(RTRIM(cs.DeliveryMeans),'') AS DeliveryMeans,
			ISNULL(RTRIM(cs.Delivered),'') AS Delivered,
			ISNULL(RTRIM(cs.CreationUser),'') AS CreationUser,
			ISNULL(RTRIM(cs.CertificateNo),'') AS CertificateNumber,
			ISNULL(RTRIM(cs.CertificateID),'') AS CertificateId,
			cs.BudgetYear AS BudgetYear,
			cs.BudgetPeriod AS BudgetPeriod,
			ISNULL(RTRIM(cs.BudgetID),'') AS BudgetId,
			ISNULL(RTRIM(cs.BudgetAccount),'') AS BudgetAccount,
			ISNULL(RTRIM(cs.Approver),'') AS Approver,
			CONVERT(VARCHAR(23), cs.ApprovedDate, 126) AS ApprovedDate,
			ISNULL(RTRIM(cs.ApprovalStatus),'') AS ApprovalStatus,
			CONVERT(VARCHAR(23), cs.ActualShipDate, 126) AS ActualShipDate,
			CONVERT(VARCHAR(23), cs.ActualDelDate, 126) AS ActualDeliveryDate,
			--CruiseOrderItems--
			cvpo.POSeq AS POLine,
			RTRIM(cvpo.ItemNo) AS ItemId,
			RTRIM(cvpo.ItemDesc) AS ItemName,
			cs.NetUSUnitPrice AS NetUSUnitPrice,
			cvpo.UnitPrice AS NetUnitPrice,
			cs.TotalOrderPrice AS TotalOrderPrice,
			cvpo.OrderQty AS OrderQuantity,
			ISNULL(RTRIM(cvpo.Currency),'') AS Currency,
			'Each' AS UOM,
			cs.ReqQty AS RequestQuantity,
			ISNULL(RTRIM(cs.ReqNo),'') AS RequestNumber,
			cs.ReqLine AS RequestLine,
			cs.QuantityDelivered AS QuantityDelivered,
			ISNULL(RTRIM(cs.Notes2),'') AS ShipRequestLineNotes,
			ISNULL(RTRIM(cs.Notes1),'') AS RequestLineShoreNotes,
			ISNULL(RTRIM(cs.ItemDesc2),'') AS MakerReferenceOfItemName2,
			CONVERT(VARCHAR(23), cs.FirstReceivedDate, 126) AS FirstReceivedDate,
			CONVERT(VARCHAR(23), cs.ExpLineShipDate, 126) AS LineEstimatedDeliveryDate
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN <include refid="cvsDB"/>.dbo.CompanyValidPO cvpo (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'CRUISEORDERS'
				AND ii.code = cvpo.PONo
				AND ii.code2 = cvpo.DestCode
			INNER JOIN <include refid="cvsDB"/>.dbo.CruiseSupplement AS cs(NOLOCK)
				ON cvpo.CompanyCode = cs.CompanyCode
				AND cvpo.CompanyType = cs.CompanyType
				AND cvpo.PONo = cs.PONo
				AND cvpo.ItemNo = cs.ItemNo
				AND cvpo.ShipmentNo = cs.ShipmentNo
				AND cvpo.POSeq = cs.POSeq
				AND cvpo.DestCode = cs.DestCode
				AND ii.code3 = RTRIM(ISNULL(cvpo.companycode,'')) + '~' + RTRIM(ISNULL(cvpo.companytype,'')) + '~' + RTRIM(ISNULL(cvpo.shipmentno,'')) + '~' + RTRIM(ISNULL(cs.ship,''))
			CROSS APPLY (
				SELECT COUNT(*) noi
				FROM <include refid="cvsDB"/>.dbo.CompanyValidPO poi (NOLOCK)
				INNER JOIN <include refid="cvsDB"/>.dbo.CruiseSupplement AS ics(NOLOCK)
					ON poi.CompanyCode = ics.CompanyCode
					AND poi.CompanyType = ics.CompanyType
					AND poi.PONo = ics.PONo
					AND poi.ItemNo = ics.ItemNo
					AND poi.ShipmentNo = ics.ShipmentNo
					AND poi.POSeq = ics.POSeq
					AND poi.DestCode = ics.DestCode
				WHERE cvpo.PONo = ics.PONo
				AND cvpo.DestCode = ics.DestCode
				AND cvpo.companycode = ics.companycode
				AND cvpo.companytype = ics.companytype
				AND cvpo.shipmentno = ics.shipmentno
				AND cs.ship = ics.ship
				AND poi.Status = 'O'
			) countActiveItems
		WHERE (countActiveItems.noi = 0 OR (countActiveItems.noi > 0 AND cvpo.Status = 'O'))
			AND ii.id in <include refid="list"/>

	</select>
	<select id="findCruiseOrderContacts" resultType="CruiseOrderContacts">
		SELECT DISTINCT
			ii.id AS [id],
			map.PartnerCode AS OrganizationRole,
			CASE WHEN map.OurCode IN ('P','C') THEN ISNULL(oo.Id, 0)
				WHEN map.OurCode IN ('V','S') THEN ISNULL(aa.AzureId, 0)
				WHEN map.OurCode IN ('O/A','A') THEN ISNULL(agt.Id, 0)
				ELSE 0 END AS OrganizationId,
			CASE WHEN map.OurCode IN ('P') THEN ISNULL(RTRIM(oo.Name), cvm.PrincipalName)
				WHEN map.OurCode IN ('C') THEN ISNULL(RTRIM(oo.Name), ccvm.ConsigneeName)
				WHEN map.OurCode IN ('V','S') THEN cvpo.SupplierName
				WHEN map.OurCode IN ('O/A') THEN ISNULL(agt.Name, 'Cargo Services') --for Cruise
				WHEN map.OurCode IN ('A') THEN ISNULL(agt.Name, 'ACS Cruise Services') --for Cruise
				ELSE NULL END AS CompanyName,
			RTRIM(oo.Address) AS Address,
			RTRIM(oo.ContactName) AS ContactName,
			RTRIM(oo.ContactNumber) AS ContactNumber,
			RTRIM(oo.ContactEmail) AS ContactEmail
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN <include refid="cvsDB"/>.dbo.CompanyValidPO cvpo (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'CRUISEORDERS'
				AND ii.code = cvpo.PONo
				AND ii.code2 = cvpo.DestCode
				AND cvpo.Status = 'O'
			INNER JOIN <include refid="cvsDB"/>.dbo.CruiseSupplement AS cs(NOLOCK)
				ON cvpo.CompanyCode = cs.CompanyCode
				AND cvpo.CompanyType = cs.CompanyType
				AND cvpo.PONo = cs.PONo
				AND cvpo.ItemNo = cs.ItemNo
				AND cvpo.ShipmentNo = cs.ShipmentNo
				AND cvpo.POSeq = cs.POSeq
				AND cvpo.DestCode = cs.DestCode
				AND ii.code3 = RTRIM(ISNULL(cvpo.companycode,'')) + '~' + RTRIM(ISNULL(cvpo.companytype,'')) + '~' + RTRIM(ISNULL(cvpo.shipmentno,'')) + '~' + RTRIM(ISNULL(cs.ship,''))
			CROSS APPLY (
				SELECT COUNT(*) noi
				FROM <include refid="cvsDB"/>.dbo.CompanyValidPO poi (NOLOCK)
				INNER JOIN <include refid="cvsDB"/>.dbo.CruiseSupplement AS ics(NOLOCK)
					ON poi.CompanyCode = ics.CompanyCode
					AND poi.CompanyType = ics.CompanyType
					AND poi.PONo = ics.PONo
					AND poi.ItemNo = ics.ItemNo
					AND poi.ShipmentNo = ics.ShipmentNo
					AND poi.POSeq = ics.POSeq
					AND poi.DestCode = ics.DestCode
				WHERE cvpo.PONo = ics.PONo
				AND cvpo.DestCode = ics.DestCode
				AND cvpo.companycode = ics.companycode
				AND cvpo.companytype = ics.companytype
				AND cvpo.shipmentno = ics.shipmentno
				AND cs.ship = ics.ship
				AND poi.Status = 'O'
			) countActiveItems
			INNER JOIN <include refid="cvsDB"/>.dbo.edicodemap map (NOLOCK)
				ON map.EDIName = 'SHIPMENT_PORTAL'
				AND map.codetype = 'POPARTYTYPE'
				AND map.Status = 'Y'
				AND map.OurCode IN ('P','C','V','S','O/A','A')
			LEFT JOIN <include refid="dbName"/> aa (NOLOCK)
				ON ii.dbname = aa.dbname
				AND aa.sysname = 'MASTERDATA'
				AND aa.codetype = 'ORGANIZATIONS'
				AND ((map.OurCode IN ('V', 'S') AND cvpo.SupplierCode = aa.code))
				AND aa.isetltoazure = 'Y'
			LEFT JOIN (
				SELECT DISTINCT cvm.PrincipalCode, cvm.PrincipalOrgID, cvm.PrincipalName
				FROM <include refid="cvsDB"/>.dbo.CruiseVesselMapOption cvm(NOLOCK)
			) cvm ON cvpo.CompanyCode = cvm.PrincipalCode
			LEFT JOIN <include refid="cvsDB"/>.dbo.CruiseVesselMapOption ccvm(NOLOCK)
				ON cvpo.CompanyCode = ccvm.PrincipalCode
				AND cs.Ship = ccvm.ShipCode
			LEFT JOIN <include refid="azureMasterDB"/>.[dbo].[Organizations] oo (NOLOCK)
				ON ((map.OurCode IN ('P') AND cvm.PrincipalOrgID IS NOT NULL AND cvm.PrincipalOrgID > 0 AND cvm.PrincipalOrgID = oo.Id)
					OR (map.OurCode IN ('C') AND ccvm.ConsigneeOrgID IS NOT NULL AND ccvm.ConsigneeOrgID > 0 AND ccvm.ConsigneeOrgID = oo.Id))
			OUTER APPLY
			(
				SELECT TOP 1 agt.Id AS Id, agt.Name AS Name
				FROM <include refid="azureDB"/>.[dbo].[AgentAssignments] aa(NOLOCK)
				INNER JOIN <include refid="azureDB"/>.[dbo].[BuyerCompliances] bc(NOLOCK)
					ON aa.BuyerComplianceId = bc.id
					AND bc.STATUS = '1'
				CROSS APPLY
				(
					SELECT *
					FROM <include refid="azureMasterDB"/>.[dbo].[Organizations] o(NOLOCK)
					WHERE o.id = bc.OrganizationId
						AND cvpo.CompanyCode = o.EdisonCompanyCodeId
				) borg
				CROSS APPLY
				(
					SELECT *
					FROM <include refid="azureMasterDB"/>.[dbo].[Organizations] o(NOLOCK)
					WHERE o.id = aa.agentOrganizationID
				) agt
				OUTER APPLY
				(
					SELECT *
					FROM <include refid="azureMasterDB"/>.[dbo].[Countries] c(NOLOCK)
					WHERE c.id = aa.CountryId
				) cty
				WHERE ((map.OurCode = 'O/A' AND aa.agentType = 1 AND (cty.code = RIGHT(RTRIM(cvpo.PortOfLoad),2) OR cty.code IS NULL))
						OR (map.OurCode = 'A' AND aa.agentType = 2))
				ORDER BY cty.code DESC
			) agt
		WHERE countActiveItems.noi > 0
			AND map.OurCode IN ('P','C','V','S','O/A','A')
			AND ii.id in <include refid="list"/>
		UNION
		SELECT DISTINCT
			ii.id AS [id],
			poc.OrganizationRole AS OrganizationRole,
			poc.OrganizationId AS OrganizationId,
			poc.CompanyName AS CompanyName,
			poc.Address AS Address,
			poc.ContactName AS ContactName,
			poc.ContactNumber AS ContactNumber,
			poc.ContactEmail AS ContactEmail
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN <include refid="cvsDB"/>.dbo.CompanyValidPO cvpo (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'CRUISEORDERS'
				AND ii.code = cvpo.PONo
				AND ii.code2 = cvpo.DestCode
			INNER JOIN <include refid="cvsDB"/>.dbo.CruiseSupplement AS cs(NOLOCK)
				ON cvpo.CompanyCode = cs.CompanyCode
				AND cvpo.CompanyType = cs.CompanyType
				AND cvpo.PONo = cs.PONo
				AND cvpo.ItemNo = cs.ItemNo
				AND cvpo.ShipmentNo = cs.ShipmentNo
				AND cvpo.POSeq = cs.POSeq
				AND cvpo.DestCode = cs.DestCode
				AND ii.code3 = RTRIM(ISNULL(cvpo.companycode,'')) + '~' + RTRIM(ISNULL(cvpo.companytype,'')) + '~' + RTRIM(ISNULL(cvpo.shipmentno,'')) + '~' + RTRIM(ISNULL(cs.ship,''))
			CROSS APPLY (
				SELECT COUNT(*) noi
				FROM <include refid="cvsDB"/>.dbo.CompanyValidPO poi (NOLOCK)
				INNER JOIN <include refid="cvsDB"/>.dbo.CruiseSupplement AS ics(NOLOCK)
					ON poi.CompanyCode = ics.CompanyCode
					AND poi.CompanyType = ics.CompanyType
					AND poi.PONo = ics.PONo
					AND poi.ItemNo = ics.ItemNo
					AND poi.ShipmentNo = ics.ShipmentNo
					AND poi.POSeq = ics.POSeq
					AND poi.DestCode = ics.DestCode
				WHERE cvpo.PONo = ics.PONo
				AND cvpo.DestCode = ics.DestCode
				AND cvpo.companycode = ics.companycode
				AND cvpo.companytype = ics.companytype
				AND cvpo.shipmentno = ics.shipmentno
				AND cs.ship = ics.ship
				AND poi.Status = 'O'
			) countActiveItems
			LEFT JOIN <include refid="azureDB"/>.[cruise].[CruiseOrderContacts] poc (NOLOCK)
				ON ii.AzureId = poc.OrderId
		WHERE countActiveItems.noi = 0
			AND ii.id in <include refid="list"/>
	</select>
	<select id="findCruiseOrderWarehouse" resultType="CruiseOrderWarehouse">
		SELECT DISTINCT
			ii.id AS [id],
			'FreightSystem' AS createdby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS createddate,
			'FreightSystem' AS updatedby,
			CONVERT(VARCHAR(23), GETDATE(), 126) AS updateddate,
			po.AzureId AS CruiseOrderId,
			cw.ItemNo AS ItemId,
			cw.POSeq AS POLine,
			ISNULL(RTRIM(cw.ModeOfTransport),'') AS ModeOfTransport,
			ISNULL(RTRIM(cw.ContainerID),'') AS ContainerID,
			ISNULL(RTRIM(cw.ContainerNo),'') AS ContainerNumber,
			ISNULL(RTRIM(cw.BookedToShip),'') AS BookedToShip,
			ISNULL(RTRIM(cw.BookingNo),'') AS BookingNumber,
			ISNULL(RTRIM(cw.HAWBMAWB),'') AS HAWBMAWB,
			ISNULL(RTRIM(cw.DeliveryTicket),'') AS DeliveryTicket,
			CONVERT(VARCHAR(23), cw.BookingCreatedDate, 126) AS BookingCreatedDate,
			CONVERT(VARCHAR(23), cw.DeliveryConfirmDate, 126) AS DeliveryConfirmDate,
			ISNULL(RTRIM(cw.BookingRemarks),'') AS BookingRemarks,
			ISNULL(RTRIM(cw.RefID),'') AS RefID,
			ISNULL(RTRIM(cw.Department),'') AS Department,
			ISNULL(RTRIM(cw.POCause),'') AS POCause,
			ISNULL(RTRIM(cw.Ship),'') AS Ship,
			ISNULL(RTRIM(cw.ReqType),'') AS ReqType,
			ISNULL(RTRIM(cw.ReqType2),'') AS ReqType2,
			ISNULL(RTRIM(cw.ReqType3),'') AS ReqType3,
			ISNULL(RTRIM(cw.Delivered),'') AS Delivered,
			cw.ReqLine AS ReqLine,
			cw.QuantityDelivered AS QuantityDelivered,
			CONVERT(VARCHAR(23), cw.ReqApprovedDate, 126) AS ReqApprovedDate,
			CONVERT(VARCHAR(23), cw.ExpLineShipDate, 126) AS ExpLineShipDate,
			ISNULL(RTRIM(cw.UNNo),'') AS UNNo,
			CONVERT(VARCHAR(23), cw.ReceiveDate, 126) AS InDate,
			CONVERT(VARCHAR(23), cw.RemoteReceivedDate, 126) AS AgentInDate,
			cw.ReceivedQty AS ReceivedQty,
			ISNULL(RTRIM(cw.UOM),'') AS UOM,
			ISNULL(cw.KGS, 0) AS KGS,
			ISNULL(RTRIM(cw.Dimension),'') AS Dimension,
			ISNULL(cw.CBM, 0) AS CBM,
			ISNULL(RTRIM(cw.PackageID),'') AS PackageID,
			ISNULL(RTRIM(cw.IsOnHold),'') AS OnHold,
			ISNULL(RTRIM(cw.OnHoldCode),'') AS OnHoldCode,
			ISNULL(RTRIM(cw.IsOSD),'') AS OSD,
			ISNULL(RTRIM(cw.OSDReason),'') AS OSDReason,
			ISNULL(RTRIM(cw.IsBonded),'') AS Bonded,
			ISNULL(RTRIM(cw.BondNo),'') AS BondNo,
			ISNULL(RTRIM(cw.IsHazardous),'') AS Hazardous,
			ISNULL(RTRIM(cw.MRStatus),'') AS MRStatus,
			CONVERT(VARCHAR(23), cw.GRDate, 126) AS GRDate,
			ISNULL(RTRIM(cw.PackingList),'') AS PackingList,
			CONVERT(VARCHAR(23), cw.RTPDate, 126) AS RTPDate,
			CONVERT(VARCHAR(23), cw.PackedDate, 126) AS PackedDate,
			CONVERT(VARCHAR(23), cw.PLCloseDate, 126) AS PLClosingDate,
			cw.ReceivingDays AS ReceivedDays,
			cw.PhysicalQty AS PhysicalQty,
			cw.ReleaseToPackDays AS ReleaseToPackDays,
			cw.PackedOnHandDays AS PackedDays,
			cw.InWHDays AS KeepWHDays,
			cw.OnHoldDays AS OnHoldDays,
			cw.AvailableDays AS AvailableDays,
			NULL AS RemoteDate,
			ISNULL(RTRIM(cw.RemoteStatus),'') AS RemoteStatus,
			ISNULL(RTRIM(cw.InvLocationName),'') AS Warehouse
		FROM <include refid="dbName"/> ii (NOLOCK)
			INNER JOIN <include refid="cvsDB"/>.dbo.CruiseWMSOMR cw (NOLOCK)
				ON ii.dbname = #{db}
				AND ii.sysname = #{sysname}
				AND ii.codetype = 'CRUISEORDERWAREHOUSE'
				AND ii.code = cw.PONo
				AND ii.code2 = cw.DestCode
				AND ii.code3 = RTRIM(ISNULL(cw.companycode,'')) + '~' + RTRIM(ISNULL(cw.companytype,'')) + '~' + RTRIM(ISNULL(cw.shipmentno,'')) + '~' + CONVERT(VARCHAR,ISNULL(cw.poseq,'')) + '~' + RTRIM(ISNULL(cw.itemno,'')) + '~' + RTRIM(ISNULL(cw.ship,''))
				AND cw.[Index] = 1
			INNER JOIN <include refid="dbName"/> po (NOLOCK)
				ON ii.dbname = po.dbname
				AND ii.sysname = po.sysname
				AND po.codetype = 'CRUISEORDERS'
				AND ii.seq = po.id
				AND ISNULL(po.isetltoazure, '') = 'Y'
		WHERE ii.id in <include refid="list"/>
	</select>

</mapper>
